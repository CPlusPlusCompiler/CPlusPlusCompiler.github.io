{"version":3,"sources":["components/DownloadButton.tsx","components/PortfolioProject.tsx","components/RepositoryList.tsx","components/SkillsListItem.tsx","components/SkillsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DownloadButton","props","Button","href","browser_download_url","variant","color","useStyles","makeStyles","theme","createStyles","root","backgroundColor","maxWidth","width","main","display","justifyContent","flexWrap","details","flexGrow","appPicture","alignSelf","justifySelf","flexShrink","minWidth","margin","findDownloadLink","releases","length","assets","console","log","PortfolioProject","useState","downloadLink","setDownloadLink","getDownloads","releasesLink","a","Axios","get","then","response","data","catch","error","setImagesList","getImages","imagesUrl","name","useEffect","url","releases_url","slice","classes","ListItem","Card","className","elevation","CardContent","Typography","component","description","CardMedia","image","title","CardActions","html_url","target","onClick","event","RepositoryList","repos","Grid","container","justify","List","map","item","fork","id","chips","spacing","SkillsListItem","skills","React","open","setOpen","button","ListItemText","primary","skill","Chip","label","listItems","nested","paddingLeft","SkillsList","aria-labelledby","createMuiTheme","palette","secondary","App","setRepos","getRepos","ThemeProvider","AppBar","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96687ba2.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Assets } from \"../data-objects/Repository\";\n\nexport default function DownloadButton(props: Assets | null) {\n    if (props != null)\n        return (\n            <Button\n                href={props.browser_download_url}\n                variant=\"outlined\"\n                color=\"secondary\">\n                Download\n            </Button>)\n} ","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react'\nimport { Button, Card, CardActions, CardContent, CardMedia, ListItem, Typography } from '@material-ui/core';\nimport { Assets, ReleaseResponse, Repository } from '../data-objects/Repository';\nimport Axios from 'axios';\nimport DownloadButton from './DownloadButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: '#340152',\n            color: 'white',\n            maxWidth: '960px',\n            width: '100%',\n        },\n        main: {\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n        },\n        details: {\n            flexGrow: 1,\n            display: 'flex',\n            // minWidth: '40vw',\n            maxWidth: '480px',\n        },\n        appPicture: {\n            alignSelf: 'center',\n            justifySelf: 'center',\n            width: 200,\n            maxWidth: '50%',\n            flexShrink: 'revert',\n            // height: 151,\n            minWidth: '10%',\n            margin: 16,\n        },\n    }),\n);\n\n\n// todo improve to include\nfunction findDownloadLink(releases: ReleaseResponse[]): Assets | null {\n    if (releases.length > 0) {\n        let assets = releases[0].assets\n        if (assets.length > 0) {\n            console.log(assets)\n            return assets[0]\n        }\n    }\n    return null\n}\n\n\nexport default function PortfolioProject(props: Repository) {\n    // fetching and extracting a download link to compiled binary, if it exists\n    const [downloadLink, setDownloadLink] = useState<Assets | null>(null)\n\n    const getDownloads = async (releasesLink: string) => {\n        Axios.get(releasesLink)\n            .then(response => setDownloadLink(findDownloadLink(response.data)))\n            .catch(error => console.error(error))\n    }\n\n    // fetching a list of images from a specific folder\n    const [imagesList, setImagesList] = useState<[]>([])\n\n    const getImages = async () => {\n        let imagesUrl = \"https://api.github.com/repos/CPlusPlusCompiler/\"\n            + props.name + \"/contents/images\"\n\n        Axios.get(imagesUrl)\n            .then(response => setImagesList(response.data))\n            .catch(error => setImagesList([]))\n    }\n\n    useEffect(() => {\n        // 1. getting download link\n        // trimming {/id} off\n        let url = props.releases_url.slice(0, props.releases_url.length - 5)\n        console.log(url)\n        getDownloads(url)\n\n        //2. getting images\n        getImages()\n    }, [])\n\n    const classes = useStyles()\n\n    return (\n        <ListItem>\n            <Card className={classes.root} elevation={20}>\n                <div className={classes.main}>\n                    <div className={classes.details}>\n                        <CardContent>\n                            <Typography component=\"h5\" variant=\"h5\">\n                                {props.name}\n                            </Typography>\n\n                            <Typography>\n                                {props.description}\n                            </Typography>\n                        </CardContent>\n                    </div>\n\n                    <CardMedia\n                        component=\"img\"\n                        className={classes.appPicture}\n                        image={\"https://cdn.arstechnica.net/wp-content/uploads/2019/06/android-q-800x449.png\"}\n                        title={props.name} />\n                </div>\n\n                <CardActions>\n                    <Button\n                        variant=\"text\"\n                        color=\"secondary\"\n                        href={props.html_url}\n                        target=\"_blank\"\n                        onClick={event => console.log(props.html_url)}>\n                        Source code\n                    </Button>\n\n                    {DownloadButton(downloadLink)}\n                </CardActions>\n            </Card>\n        </ListItem>\n\n    );\n}","import { createStyles, Grid, List, makeStyles, Theme } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { RepositoryResponse } from '../data-objects/Repository'\nimport PortfolioProject from './PortfolioProject'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            // flexGrow: 1,\n            minWidth: '40%'\n        }\n    })\n)\n\n\nfunction RepositoryList(repos: RepositoryResponse[]) {\n    const classes = useStyles();\n\n    return (\n        <Grid container justify='center'>\n            <List className={classes.root}>\n                {\n                    repos.map(item => {\n                        if (!item.fork) {\n                            return <PortfolioProject\n                                key={item.id}\n                                id={item.id}\n                                name={item.name}\n                                description={item.description}\n                                html_url={item.html_url}\n                                releases_url={item.releases_url}\n                            />\n                        }\n                        else\n                            return <div></div>\n                    })\n                }\n            </List>\n        </Grid>\n    )\n}\n\nexport default RepositoryList","import { Chip, createStyles, ListItem, ListItemText, makeStyles, Theme } from '@material-ui/core';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport React from 'react'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        chips: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'left',\n            '& > *': {\n                margin: theme.spacing(0.5),\n            },\n        }\n    })\n)\n\nexport default function SkillsListItem(title: string, skills: string[]) {\n    const classes = useStyles()\n\n    const [open, setOpen] = React.useState(true)\n    const handleClick = () => {\n        setOpen(!open);\n    }\n\n    return (\n        <div >\n            <ListItem button onClick={handleClick} >\n                <ListItemText primary={title}></ListItemText>\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n\n            {open ? <ListItem className={classes.chips}>\n                {skills.map(skill => {\n                    return (\n                        <Chip label={skill} color=\"secondary\"></Chip>\n                    )\n                })}\n            </ListItem> : <div></div>}\n        </div>\n    )\n\n\n}","import { createStyles, List, makeStyles, Theme } from '@material-ui/core'\nimport React from 'react'\nimport SkillsListItem from './SkillsListItem'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: '#340152',\n            maxWidth: 480,\n        },\n        listItems: {\n            width: '100%',\n\n        },\n        nested: {\n            color: 'white',\n            paddingLeft: theme.spacing(4)\n        },\n\n    }),\n)\n\n\nfunction SkillsList() {\n    const classes = useStyles()\n\n    return (\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            className={classes.root}\n        >\n            <div className={classes.listItems}>\n                {SkillsListItem(\"Programming languages\",\n                    [\n                        \"Kotlin\",\n                        \"Java\",\n                        \"C++\",\n                        \"C#\",\n                        \"TypeScript\",\n                    ]\n                )}\n\n                {SkillsListItem(\"Markup languages\",\n                    [\n                        \"Xml\",\n                        \"Html\",\n                        \"CSS\",\n                        \"Gradle\",\n                        \"MD\",\n                    ]\n                )}\n\n                {SkillsListItem(\"Architectural pattern\",\n                    [\n                        \"MVVM\"\n                    ]\n                )}\n\n                {SkillsListItem(\"Frameworks / API / tools\",\n                    [\n                        \"Qt QML, Widgets\",\n                        \"Android SDK\",\n                        \"Rest API\",\n                        \".Net Core\",\n                        \"Git\",\n                        \"Windows API\",\n                        \"Network sockets\",\n                        \"Linux\",\n                    ]\n                )}\n\n                {SkillsListItem(\"Android related\",\n                    [\n                        \"Room\",\n                        \"Realm\",\n                        \"LiveData\",\n                        \"Jetpack navigation\",\n                        \"Lifecycles\",\n                        \"Hilt\",\n                        \"Material design\",\n                    ]\n                )}\n            </div>\n\n        </List>\n    )\n}\n\nexport default SkillsList","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport RepositoryList from './components/RepositoryList';\nimport Axios from 'axios';\nimport { RepositoryResponse } from './data-objects/Repository';\nimport { AppBar, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport SkillsList from './components/SkillsList';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1f072c'\n    },\n    secondary: {\n      main: '#64b5f6'\n    },\n  }\n\n})\n\n\nconst App: React.FC = props => {\n  const [repos, setRepos] = useState<RepositoryResponse[]>([])\n\n  const getRepos = async () => {\n    Axios.get(\"https://api.github.com/users/CPlusPlusCompiler/repos\")\n      .then(response => response.data)\n      .then(data => setRepos(data))\n      .catch(error => console.error(error))\n  }\n\n  useEffect(() => {\n    console.log(\"fetching repositories\")\n    getRepos()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AppBar position=\"sticky\">\n          <p>Andrius' portfolio</p>\n        </AppBar>\n\n        <div className=\"App-header\">\n          <h1>Skills</h1>\n          {SkillsList()}\n        </div>\n\n        <h1>Projects from GitHub</h1>\n        {RepositoryList(repos)}\n      </ThemeProvider>\n\n      <footer className=\"App-footer\">\n        <h1>About me</h1>\n        <p>I am Android and desktop software\n        developer looking for new\n        challenges and interesting projects.\n        There are some public repositories\n        in my GitHub containing very small\n        Android and other projects made in\n        spare time.\n        I like to constantly develop my skills\n        and keep up to date with latest best\n        practices, changes in programming\n        languages, frameworks and new\n        technologies.\n</p>\n      </footer>\n\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}