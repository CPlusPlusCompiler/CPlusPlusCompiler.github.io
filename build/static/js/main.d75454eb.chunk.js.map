{"version":3,"sources":["logo.svg","components/PortfolioProject.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","backgroundColor","color","width","main","display","justifyContent","flexWrap","details","flexGrow","minWidth","cover","alignSelf","justifySelf","height","margin","PortfolioProject","props","classes","ListItem","Card","className","elevation","CardContent","Typography","component","variant","name","description","CardMedia","image","link","title","CardActions","Button","App","src","logo","alt","Grid","container","justify","List","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,G,MAAA,IAA0B,kC,gFCWnCA,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,gBAAiB,cACjBC,MAAO,QACPC,MAAO,QAEXC,KAAM,CACFC,QAAS,OACTC,eAAgB,SAChBC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVJ,QAAS,OACTK,SAAU,OAEdC,MAAO,CACHC,UAAW,SACXC,YAAa,SACbV,MAAO,IACPW,OAAQ,IACRJ,SAAU,MACVK,OAAQ,SAML,SAASC,EAAiBC,GACrC,IAAMC,EAAUtB,IAEhB,OACI,cAACuB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,UAAWH,EAAQlB,KAAMsB,UAAW,GAA1C,UACI,sBAAKD,UAAWH,EAAQd,KAAxB,UACI,qBAAKiB,UAAWH,EAAQV,QAAxB,SACI,eAACe,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SACKT,EAAMU,OAGX,cAACH,EAAA,EAAD,UACKP,EAAMW,mBAKnB,cAACC,EAAA,EAAD,CACIJ,UAAU,MACVJ,UAAWH,EAAQP,MACnBmB,MAAOb,EAAMc,KACbC,MAAOf,EAAMU,UAGrB,cAACM,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQhC,MAAM,UAAd,6B,oBC/BLiC,MA9Bf,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKe,IAAKC,EAAMhB,UAAU,WAAWiB,IAAI,SACzC,kDAKF,iCACE,sBACA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,eAACC,EAAA,EAAD,WACE,cAAC1B,EAAD,CACEW,KAAK,oBACLC,YAAY,+DACZG,KAAK,gBAEP,cAACf,EAAD,CACEW,KAAK,oBACLC,YAAY,qBACZG,KAAK,4BCdJY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d75454eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react'\nimport { Button, Card, CardActions, CardContent, CardMedia, ListItem, Typography } from '@material-ui/core';\n\ninterface ProjectProps {\n    name: string\n    description: string\n    link: string\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: 'transparent',\n            color: 'white',\n            width: '100%',\n        },\n        main: {\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n        },\n        details: {\n            flexGrow: 1,\n            display: 'flex',\n            minWidth: '70%'\n        },\n        cover: {\n            alignSelf: 'center',\n            justifySelf: 'center',\n            width: 151,\n            height: 151,\n            minWidth: '10%',\n            margin: 16,\n        },\n    }),\n);\n\n\nexport default function PortfolioProject(props: ProjectProps) {\n    const classes = useStyles()\n\n    return (\n        <ListItem>\n            <Card className={classes.root} elevation={20}>\n                <div className={classes.main} >\n                    <div className={classes.details}>\n                        <CardContent>\n                            <Typography component=\"h5\" variant=\"h5\">\n                                {props.name}\n                            </Typography>\n\n                            <Typography>\n                                {props.description}\n                            </Typography>\n                        </CardContent>\n                    </div>\n\n                    <CardMedia\n                        component=\"img\"\n                        className={classes.cover}\n                        image={props.link}\n                        title={props.name} />\n                </div>\n\n                <CardActions>\n                    <Button color=\"primary\">\n                        Githuw4b\n                    </Button>\n                </CardActions>\n            </Card>\n        </ListItem>\n\n    );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PortfolioProject from './components/PortfolioProject';\nimport { Grid, List } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Rasengd33a5wn!\n        </p>\n      </header>\n\n      <body>\n        <p></p>\n        <Grid container justify='center'>\n          <List>\n            <PortfolioProject\n              name=\"Video ThumbnailDL\"\n              description=\"A simple application that downloads Youtube video thumbnails\"\n              link=\"logo512.png\" />\n\n            <PortfolioProject\n              name=\"Video ThumbnailDL\"\n              description=\"A simple applicati\"\n              link=\"logo512.png\" />\n          </List>\n        </Grid>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}