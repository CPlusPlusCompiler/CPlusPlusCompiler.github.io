{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/andrius/Projektai/Portfolio/PortfolioReact/portfolio-react/src/components/PortfolioProject.tsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, CardActions, CardContent, CardMedia, ListItem, Typography } from '@material-ui/core';\nimport Axios from 'axios';\nimport DownloadButton from './DownloadButton';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    backgroundColor: '#340152',\n    color: 'white',\n    maxWidth: '960px',\n    width: '100%'\n  },\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  details: {\n    flexGrow: 1,\n    display: 'flex',\n    // minWidth: '40vw',\n    maxWidth: '480px'\n  },\n  cover: {\n    alignSelf: 'center',\n    justifySelf: 'center',\n    width: 151,\n    height: 151,\n    minWidth: '10%',\n    margin: 16\n  }\n})); // todo improve to include\n\nfunction findDownloadLink(releases) {\n  if (releases.length > 0) {\n    let assets = releases[0].assets;\n\n    if (assets.length > 0) {\n      console.log(assets);\n      return assets[0];\n    }\n  }\n\n  return null;\n}\n\nexport default function PortfolioProject(props) {\n  _s();\n\n  // fetching and extracting a download link to compiled binary, if it exists\n  const [downloadLink, setDownloadLink] = useState(null);\n\n  const getDownloads = async releasesLink => {\n    Axios.get(releasesLink).then(response => setDownloadLink(findDownloadLink(response.data))).catch(error => console.error(error));\n  }; // fetching a list of images from a specific folder\n\n\n  const [imagesList, setImagesList] = useState([]);\n\n  const getImages = async () => {\n    let imagesUrl = \"https://api.github.com/repos/CPlusPlusCompiler/\" + props.name + \"/contents/images\";\n    Axios.get(imagesUrl).then(response => setImagesList(response.data)).catch(error => setImagesList([]));\n  };\n\n  useEffect(() => {\n    // 1. getting download link\n    // trimming {/id} off\n    let url = props.releases_url.slice(0, props.releases_url.length - 5);\n    console.log(url);\n    getDownloads(url); //2. getting images\n\n    getImages();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      elevation: 20,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.details,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h5\",\n              variant: \"h5\",\n              children: props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: props.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          className: classes.cover,\n          image: \"\",\n          title: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          href: props.html_url,\n          target: \"_blank\",\n          onClick: event => console.log(props.html_url),\n          children: \"Source code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), DownloadButton(downloadLink)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioProject, \"AWLKjOsJHn8g7pUVQnbdNaYyL5A=\", false, function () {\n  return [useStyles];\n});\n\n_c = PortfolioProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioProject\");","map":{"version":3,"sources":["/home/andrius/Projektai/Portfolio/PortfolioReact/portfolio-react/src/components/PortfolioProject.tsx"],"names":["makeStyles","createStyles","React","useEffect","useState","Button","Card","CardActions","CardContent","CardMedia","ListItem","Typography","Axios","DownloadButton","useStyles","theme","root","backgroundColor","color","maxWidth","width","main","display","justifyContent","flexWrap","details","flexGrow","cover","alignSelf","justifySelf","height","minWidth","margin","findDownloadLink","releases","length","assets","console","log","PortfolioProject","props","downloadLink","setDownloadLink","getDownloads","releasesLink","get","then","response","data","catch","error","imagesList","setImagesList","getImages","imagesUrl","name","url","releases_url","slice","classes","description","html_url","event"],"mappings":"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","sourcesContent":["import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react'\nimport { Button, Card, CardActions, CardContent, CardMedia, ListItem, Typography } from '@material-ui/core';\nimport { Assets, ReleaseResponse, Repository, RepositoryResponse } from '../data-objects/Repository';\nimport Axios from 'axios';\nimport DownloadButton from './DownloadButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: '#340152',\n            color: 'white',\n            maxWidth: '960px',\n            width: '100%',\n        },\n        main: {\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n        },\n        details: {\n            flexGrow: 1,\n            display: 'flex',\n            // minWidth: '40vw',\n            maxWidth: '480px',\n        },\n        cover: {\n            alignSelf: 'center',\n            justifySelf: 'center',\n            width: 151,\n            height: 151,\n            minWidth: '10%',\n            margin: 16,\n        },\n    }),\n);\n\n\n// todo improve to include\nfunction findDownloadLink(releases: ReleaseResponse[]): Assets | null {\n    if (releases.length > 0) {\n        let assets = releases[0].assets\n        if (assets.length > 0) {\n            console.log(assets)\n            return assets[0]\n        }\n    }\n    return null\n}\n\n\nexport default function PortfolioProject(props: Repository) {\n    // fetching and extracting a download link to compiled binary, if it exists\n    const [downloadLink, setDownloadLink] = useState<Assets | null>(null)\n\n    const getDownloads = async (releasesLink: string) => {\n        Axios.get(releasesLink)\n            .then(response => setDownloadLink(findDownloadLink(response.data)))\n            .catch(error => console.error(error))\n    }\n\n    // fetching a list of images from a specific folder\n    const [imagesList, setImagesList] = useState<[]>([])\n\n    const getImages = async () => {\n        let imagesUrl = \"https://api.github.com/repos/CPlusPlusCompiler/\"\n            + props.name + \"/contents/images\"\n\n        Axios.get(imagesUrl)\n            .then(response => setImagesList(response.data))\n            .catch(error => setImagesList([]))\n    }\n\n    useEffect(() => {\n        // 1. getting download link\n        // trimming {/id} off\n        let url = props.releases_url.slice(0, props.releases_url.length - 5)\n        console.log(url)\n        getDownloads(url)\n\n        //2. getting images\n        getImages()\n    }, [])\n\n    const classes = useStyles()\n\n    return (\n        <ListItem>\n            <Card className={classes.root} elevation={20}>\n                <div className={classes.main}>\n                    <div className={classes.details}>\n                        <CardContent>\n                            <Typography component=\"h5\" variant=\"h5\">\n                                {props.name}\n                            </Typography>\n\n                            <Typography>\n                                {props.description}\n                            </Typography>\n                        </CardContent>\n                    </div>\n\n                    <CardMedia\n                        component=\"img\"\n                        className={classes.cover}\n                        image={\"\"}\n                        title={props.name} />\n                </div>\n\n                <CardActions>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        href={props.html_url}\n                        target=\"_blank\"\n                        onClick={event => console.log(props.html_url)}>\n                        Source code\n                    </Button>\n\n                    {DownloadButton(downloadLink)}\n                </CardActions>\n            </Card>\n        </ListItem>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}