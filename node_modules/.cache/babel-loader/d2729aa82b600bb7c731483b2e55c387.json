{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{createStyles,Grid,List,makeStyles}from'@material-ui/core';import React from'react';import PortfolioProject from'./PortfolioProject';var useStyles=makeStyles(function(theme){return createStyles({root:{// flexGrow: 1,\nminWidth:'40%'}});});function RepositoryList(repos){var classes=useStyles();return/*#__PURE__*/_jsx(Grid,{container:true,justify:\"center\",children:/*#__PURE__*/_jsx(List,{className:classes.root,children:repos.map(function(item){if(!item.fork){return/*#__PURE__*/_jsx(PortfolioProject,{id:item.id,name:item.name,description:item.description,html_url:item.html_url,releases_url:item.releases_url},item.id);}else return/*#__PURE__*/_jsx(\"div\",{});})})});}export default RepositoryList;","map":{"version":3,"sources":["/home/andrius/Projektai/Portfolio/CPlusPlusCompiler.github.io/src/components/RepositoryList.tsx"],"names":["createStyles","Grid","List","makeStyles","React","PortfolioProject","useStyles","theme","root","minWidth","RepositoryList","repos","classes","map","item","fork","id","name","description","html_url","releases_url"],"mappings":"2CAAA,OAASA,YAAT,CAAuBC,IAAvB,CAA6BC,IAA7B,CAAmCC,UAAnC,KAA4D,mBAA5D,CACA,MAAOC,CAAAA,KAAP,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAACI,KAAD,QACzBP,CAAAA,YAAY,CAAC,CACTQ,IAAI,CAAE,CACF;AACAC,QAAQ,CAAE,KAFR,CADG,CAAD,CADa,EAAD,CAA5B,CAUA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAAqD,CACjD,GAAMC,CAAAA,OAAO,CAAGN,SAAS,EAAzB,CAEA,mBACI,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,QAAxB,uBACI,KAAC,IAAD,EAAM,SAAS,CAAEM,OAAO,CAACJ,IAAzB,UAEQG,KAAK,CAACE,GAAN,CAAU,SAAAC,IAAI,CAAI,CACd,GAAI,CAACA,IAAI,CAACC,IAAV,CAAgB,CACZ,mBAAO,KAAC,gBAAD,EAEH,EAAE,CAAED,IAAI,CAACE,EAFN,CAGH,IAAI,CAAEF,IAAI,CAACG,IAHR,CAIH,WAAW,CAAEH,IAAI,CAACI,WAJf,CAKH,QAAQ,CAAEJ,IAAI,CAACK,QALZ,CAMH,YAAY,CAAEL,IAAI,CAACM,YANhB,EACEN,IAAI,CAACE,EADP,CAAP,CAQH,CATD,IAWI,oBAAO,cAAP,CACP,CAbD,CAFR,EADJ,EADJ,CAsBH,CAED,cAAeN,CAAAA,cAAf","sourcesContent":["import { createStyles, Grid, List, makeStyles, Theme } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { RepositoryResponse } from '../data-objects/Repository'\nimport PortfolioProject from './PortfolioProject'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            // flexGrow: 1,\n            minWidth: '40%'\n        }\n    })\n)\n\n\nfunction RepositoryList(repos: RepositoryResponse[]) {\n    const classes = useStyles();\n\n    return (\n        <Grid container justify='center'>\n            <List className={classes.root}>\n                {\n                    repos.map(item => {\n                        if (!item.fork) {\n                            return <PortfolioProject\n                                key={item.id}\n                                id={item.id}\n                                name={item.name}\n                                description={item.description}\n                                html_url={item.html_url}\n                                releases_url={item.releases_url}\n                            />\n                        }\n                        else\n                            return <div></div>\n                    })\n                }\n            </List>\n        </Grid>\n    )\n}\n\nexport default RepositoryList"]},"metadata":{},"sourceType":"module"}