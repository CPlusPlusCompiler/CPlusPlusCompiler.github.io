{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/andrius/Projektai/Portfolio/PortfolioReact/portfolio-react/src/components/PortfolioProject.tsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Card, CardActions, CardContent, CardMedia, ListItem, Typography } from '@material-ui/core';\nimport Axios from 'axios';\nimport DownloadButton from './DownloadButton';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    backgroundColor: 'transparent',\n    color: 'white',\n    width: '100%'\n  },\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap'\n  },\n  details: {\n    flexGrow: 1,\n    display: 'flex',\n    minWidth: '70%'\n  },\n  cover: {\n    alignSelf: 'center',\n    justifySelf: 'center',\n    width: 151,\n    height: 151,\n    minWidth: '10%',\n    margin: 16\n  }\n}));\n\nfunction getDownload(responses) {\n  return null;\n}\n\nexport default function PortfolioProject(props) {\n  _s();\n\n  const getDownloads = async releasesLink => {\n    Axios.get(releasesLink).then(response => response.data).then(data => setDownloadLink(getDownload(data))).catch(error => console.log(error));\n  };\n\n  const classes = useStyles();\n  const [downloadLink, setDownloadLink] = useState();\n  useEffect(() => {\n    console.log(\"getting shit\");\n    getDownloads(props.releases_url.slice(0, props.releases_url.length - 5));\n  });\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      elevation: 20,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.details,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"h5\",\n              variant: \"h5\",\n              children: props.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: props.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          className: classes.cover,\n          image: props.imageLink ? props.imageLink : \"\",\n          title: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          href: props.html_url,\n          target: \"_blank\",\n          onClick: event => console.log(props.html_url),\n          children: \"Source code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), DownloadButton]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PortfolioProject, \"AqTlBZNm56MoUdQk8XkrKDmIV+E=\", false, function () {\n  return [useStyles];\n});\n\n_c = PortfolioProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioProject\");","map":{"version":3,"sources":["/home/andrius/Projektai/Portfolio/PortfolioReact/portfolio-react/src/components/PortfolioProject.tsx"],"names":["makeStyles","createStyles","React","useEffect","useState","Button","Card","CardActions","CardContent","CardMedia","ListItem","Typography","Axios","DownloadButton","useStyles","theme","root","backgroundColor","color","width","main","display","justifyContent","flexWrap","details","flexGrow","minWidth","cover","alignSelf","justifySelf","height","margin","getDownload","responses","PortfolioProject","props","getDownloads","releasesLink","get","then","response","data","setDownloadLink","catch","error","console","log","classes","downloadLink","releases_url","slice","length","name","description","imageLink","html_url","event"],"mappings":"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","sourcesContent":["import { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react'\nimport { Button, Card, CardActions, CardContent, CardMedia, ListItem, Typography } from '@material-ui/core';\nimport { Assets, ReleaseResponse, Repository, RepositoryResponse } from '../data-objects/Repository';\nimport Axios from 'axios';\nimport DownloadButton from './DownloadButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: 'transparent',\n            color: 'white',\n            width: '100%',\n        },\n        main: {\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n        },\n        details: {\n            flexGrow: 1,\n            display: 'flex',\n            minWidth: '70%'\n        },\n        cover: {\n            alignSelf: 'center',\n            justifySelf: 'center',\n            width: 151,\n            height: 151,\n            minWidth: '10%',\n            margin: 16,\n        },\n    }),\n);\n\n\nfunction getDownload(responses: ReleaseResponse[]): Assets | null {\n    return null\n}\n\n\nexport default function PortfolioProject(props: Repository) {\n\n    const getDownloads = async (releasesLink: string) => {\n        Axios.get(releasesLink)\n            .then(response => response.data)\n            .then(data => setDownloadLink(getDownload(data)))\n            .catch(error => console.log(error))\n    }\n\n    const classes = useStyles()\n    const [downloadLink, setDownloadLink] = useState<Assets | null>()\n\n    useEffect(() => {\n        console.log(\"getting shit\")\n        getDownloads(props.releases_url.slice(0, props.releases_url.length - 5))\n    })\n\n\n    return (\n        <ListItem>\n            <Card className={classes.root} elevation={20}>\n                <div className={classes.main}>\n                    <div className={classes.details}>\n                        <CardContent>\n                            <Typography component=\"h5\" variant=\"h5\">\n                                {props.name}\n                            </Typography>\n\n                            <Typography>\n                                {props.description}\n                            </Typography>\n                        </CardContent>\n                    </div>\n\n                    <CardMedia\n                        component=\"img\"\n                        className={classes.cover}\n                        image={props.imageLink ? props.imageLink : \"\"}\n                        title={props.name} />\n                </div>\n\n                <CardActions>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        href={props.html_url}\n                        target=\"_blank\"\n                        onClick={event => console.log(props.html_url)}>\n                        Source code\n                    </Button>\n\n                    {DownloadButton}\n                </CardActions>\n            </Card>\n        </ListItem>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}