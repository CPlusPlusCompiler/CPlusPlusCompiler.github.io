{"version":3,"file":"is-it-type.min.js","sources":["../../src/index.js"],"sourcesContent":["/* --------------------\n * is-it-type module\n * Entry point\n * ------------------*/\n\n// Exports\n\n/*\n * Replication of core-util-is methods.\n * https://www.npmjs.com/package/core-util-is\n */\n\nexport function isArray(arg) {\n\treturn Array.isArray(arg);\n}\n\nexport function isBoolean(arg) {\n\treturn isType('boolean', arg);\n}\n\nexport function isNull(arg) {\n\treturn arg === null;\n}\n\nexport function isUndefined(arg) {\n\treturn arg === void 0; // eslint-disable-line no-void\n}\n\nexport function isNullOrUndefined(arg) {\n\treturn arg == null;\n}\n\nexport function isNumber(arg) {\n\treturn isType('number', arg);\n}\n\nexport function isString(arg) {\n\treturn isType('string', arg);\n}\n\nexport function isSymbol(arg) {\n\treturn isType('symbol', arg);\n}\n\nexport function isRegExp(arg) {\n\treturn isTypeByToString('RegExp', arg);\n}\n\nexport function isObject(arg) {\n\treturn isType('object', arg) && !isNull(arg);\n}\n\nexport function isDate(arg) {\n\treturn isTypeByToString('Date', arg);\n}\n\nexport function isError(arg) {\n\treturn isTypeByToString('Error', arg) || arg instanceof Error;\n}\n\nexport function isFunction(arg) {\n\treturn isType('function', arg);\n}\n\nexport function isPrimitive(arg) {\n\tconst type = getType(arg);\n\treturn arg == null\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol';\n}\n\n/*\n * Additional methods\n */\n\n// Strings\n\nexport function isEmptyString(arg) {\n\treturn arg === '';\n}\n\nexport function isFullString(arg) {\n\treturn isString(arg) && !isEmptyString(arg);\n}\n\n// Objects\n\nexport function isEmptyObject(arg) {\n\treturn isObject(arg) && Object.keys(arg).length === 0;\n}\n\n// Numbers\n\nexport function isInteger(arg) {\n\treturn Number.isInteger(arg);\n}\n\nexport function isPositiveInteger(arg) {\n\treturn isInteger(arg) && arg > 0;\n}\n\nexport function isPositiveIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg >= 0;\n}\n\nexport function isNegativeInteger(arg) {\n\treturn isInteger(arg) && arg < 0;\n}\n\nexport function isNegativeIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg <= 0;\n}\n\n// Other\n\nexport function isType(type, arg) {\n\treturn getType(arg) === type;\n}\n\n/*\n * Helpers\n */\n\nfunction getType(arg) {\n\treturn typeof arg;\n}\n\nconst {toString} = Object.prototype;\nfunction isTypeByToString(type, arg) {\n\treturn toString.call(arg) === `[object ${type}]`;\n}\n"],"names":["isNull","arg","isString","isType","isObject","isEmptyString","isInteger","Number","type","getType","toString","Object","prototype","isTypeByToString","call","Array","isArray","keys","length","Error"],"mappings":"8MAoBO,SAASA,EAAOC,UACP,OAARA,EAeD,SAASC,EAASD,UACjBE,EAAO,SAAUF,GAWlB,SAASG,EAASH,UACjBE,EAAO,SAAUF,KAASD,EAAOC,GA8BlC,SAASI,EAAcJ,SACd,KAARA,EAeD,SAASK,EAAUL,UAClBM,OAAOD,UAAUL,GAqBlB,SAASE,EAAOK,EAAMP,UACrBQ,EAAQR,KAASO,EAOzB,SAASC,EAAQR,iBACFA,MAGRS,EAAYC,OAAOC,UAAnBF,SACP,SAASG,EAAiBL,EAAMP,UACxBS,EAASI,KAAKb,gBAAoBO,gBAvHnC,SAAiBP,UAChBc,MAAMC,QAAQf,gBAGf,SAAmBA,UAClBE,EAAO,UAAWF,aAmCnB,SAAgBA,UACfY,EAAiB,OAAQZ,oBAoC1B,SAAuBA,UACtBG,EAASH,IAAoC,IAA5BU,OAAOM,KAAKhB,GAAKiB,oCAlCnC,SAAiBjB,UAChBY,EAAiB,QAASZ,IAAQA,aAAekB,sBA0BlD,SAAsBlB,UACrBC,EAASD,KAASI,EAAcJ,iBAxBjC,SAAoBA,UACnBE,EAAO,WAAYF,sCA8CpB,SAA2BA,UAC1BK,EAAUL,IAAQA,EAAM,6BAGzB,SAAiCA,UAChCK,EAAUL,IAAQA,GAAO,kCApF1B,SAA2BA,UACnB,MAAPA,cAGD,SAAkBA,UACjBE,EAAO,SAAUF,qCAkElB,SAA2BA,UAC1BK,EAAUL,IAAQA,EAAM,6BAGzB,SAAiCA,UAChCK,EAAUL,IAAQA,GAAO,iBAxC1B,SAAqBA,OACrBO,EAAOC,EAAQR,UACP,MAAPA,GACM,YAATO,GACS,WAATA,GACS,WAATA,GACS,WAATA,cA1BE,SAAkBP,UACjBY,EAAiB,SAAUZ,4BAL5B,SAAkBA,UACjBE,EAAO,SAAUF,6BAjBlB,SAAqBA,eACZ,IAARA"}