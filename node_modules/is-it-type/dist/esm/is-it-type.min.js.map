{"version":3,"file":"is-it-type.min.js","sources":["../../src/index.js"],"sourcesContent":["/* --------------------\n * is-it-type module\n * Entry point\n * ------------------*/\n\n// Exports\n\n/*\n * Replication of core-util-is methods.\n * https://www.npmjs.com/package/core-util-is\n */\n\nexport function isArray(arg) {\n\treturn Array.isArray(arg);\n}\n\nexport function isBoolean(arg) {\n\treturn isType('boolean', arg);\n}\n\nexport function isNull(arg) {\n\treturn arg === null;\n}\n\nexport function isUndefined(arg) {\n\treturn arg === void 0; // eslint-disable-line no-void\n}\n\nexport function isNullOrUndefined(arg) {\n\treturn arg == null;\n}\n\nexport function isNumber(arg) {\n\treturn isType('number', arg);\n}\n\nexport function isString(arg) {\n\treturn isType('string', arg);\n}\n\nexport function isSymbol(arg) {\n\treturn isType('symbol', arg);\n}\n\nexport function isRegExp(arg) {\n\treturn isTypeByToString('RegExp', arg);\n}\n\nexport function isObject(arg) {\n\treturn isType('object', arg) && !isNull(arg);\n}\n\nexport function isDate(arg) {\n\treturn isTypeByToString('Date', arg);\n}\n\nexport function isError(arg) {\n\treturn isTypeByToString('Error', arg) || arg instanceof Error;\n}\n\nexport function isFunction(arg) {\n\treturn isType('function', arg);\n}\n\nexport function isPrimitive(arg) {\n\tconst type = getType(arg);\n\treturn arg == null\n\t\t|| type === 'boolean'\n\t\t|| type === 'number'\n\t\t|| type === 'string'\n\t\t|| type === 'symbol';\n}\n\n/*\n * Additional methods\n */\n\n// Strings\n\nexport function isEmptyString(arg) {\n\treturn arg === '';\n}\n\nexport function isFullString(arg) {\n\treturn isString(arg) && !isEmptyString(arg);\n}\n\n// Objects\n\nexport function isEmptyObject(arg) {\n\treturn isObject(arg) && Object.keys(arg).length === 0;\n}\n\n// Numbers\n\nexport function isInteger(arg) {\n\treturn Number.isInteger(arg);\n}\n\nexport function isPositiveInteger(arg) {\n\treturn isInteger(arg) && arg > 0;\n}\n\nexport function isPositiveIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg >= 0;\n}\n\nexport function isNegativeInteger(arg) {\n\treturn isInteger(arg) && arg < 0;\n}\n\nexport function isNegativeIntegerOrZero(arg) {\n\treturn isInteger(arg) && arg <= 0;\n}\n\n// Other\n\nexport function isType(type, arg) {\n\treturn getType(arg) === type;\n}\n\n/*\n * Helpers\n */\n\nfunction getType(arg) {\n\treturn typeof arg;\n}\n\nconst {toString} = Object.prototype;\nfunction isTypeByToString(type, arg) {\n\treturn toString.call(arg) === `[object ${type}]`;\n}\n"],"names":["isArray","arg","Array","isBoolean","isType","isNull","isUndefined","isNullOrUndefined","isNumber","isString","isSymbol","isRegExp","isTypeByToString","isObject","isDate","isError","Error","isFunction","isPrimitive","type","getType","isEmptyString","isFullString","isEmptyObject","Object","keys","length","isInteger","Number","isPositiveInteger","isPositiveIntegerOrZero","isNegativeInteger","isNegativeIntegerOrZero","toString","prototype","call"],"mappings":"AAYO,SAASA,EAAQC,UAChBC,MAAMF,QAAQC,GAGf,SAASE,EAAUF,UAClBG,EAAO,UAAWH,GAGnB,SAASI,EAAOJ,UACP,OAARA,EAGD,SAASK,EAAYL,eACZ,IAARA,EAGD,SAASM,EAAkBN,UACnB,MAAPA,EAGD,SAASO,EAASP,UACjBG,EAAO,SAAUH,GAGlB,SAASQ,EAASR,UACjBG,EAAO,SAAUH,GAGlB,SAASS,EAAST,UACjBG,EAAO,SAAUH,GAGlB,SAASU,EAASV,UACjBW,EAAiB,SAAUX,GAG5B,SAASY,EAASZ,UACjBG,EAAO,SAAUH,KAASI,EAAOJ,GAGlC,SAASa,EAAOb,UACfW,EAAiB,OAAQX,GAG1B,SAASc,EAAQd,UAChBW,EAAiB,QAASX,IAAQA,aAAee,MAGlD,SAASC,EAAWhB,UACnBG,EAAO,WAAYH,GAGpB,SAASiB,EAAYjB,OACrBkB,EAAOC,EAAQnB,UACP,MAAPA,GACM,YAATkB,GACS,WAATA,GACS,WAATA,GACS,WAATA,EASE,SAASE,EAAcpB,SACd,KAARA,EAGD,SAASqB,EAAarB,UACrBQ,EAASR,KAASoB,EAAcpB,GAKjC,SAASsB,EAActB,UACtBY,EAASZ,IAAoC,IAA5BuB,OAAOC,KAAKxB,GAAKyB,OAKnC,SAASC,EAAU1B,UAClB2B,OAAOD,UAAU1B,GAGlB,SAAS4B,EAAkB5B,UAC1B0B,EAAU1B,IAAQA,EAAM,EAGzB,SAAS6B,EAAwB7B,UAChC0B,EAAU1B,IAAQA,GAAO,EAG1B,SAAS8B,EAAkB9B,UAC1B0B,EAAU1B,IAAQA,EAAM,EAGzB,SAAS+B,EAAwB/B,UAChC0B,EAAU1B,IAAQA,GAAO,EAK1B,SAASG,EAAOe,EAAMlB,UACrBmB,EAAQnB,KAASkB,EAOzB,SAASC,EAAQnB,iBACFA,MAGRgC,EAAYT,OAAOU,UAAnBD,SACP,SAASrB,EAAiBO,EAAMlB,UACxBgC,EAASE,KAAKlC,gBAAoBkB"}