{"version":3,"file":"babel.js","sources":["../../src/server/babel.js"],"sourcesContent":["/* --------------------\n * react-lazy-data module\n * `react-lazy-data/babel` entry point\n * Babel plugin\n * ------------------*/\n\n// Modules\nimport createId from 'babel-unique-id';\nimport {pick} from 'lodash';\nimport {isFullString} from 'is-it-type';\nimport tinyInvariant from 'tiny-invariant';\n\n// Imports\nimport {DEFAULT_CACHE_VAR} from '../shared/constants.js';\n\n// Constants\nconst PLUGIN_NAME = 'react-lazy-data/babel';\n\n// Exports\n\n// Invariant function with prefix\nconst invariant = __DEV__\n\t? (condition, message) => tinyInvariant(condition, `${PLUGIN_NAME}: ${message}`)\n\t: tinyInvariant;\n\n/**\n * Babel plugin.\n * Adds unique IDs to `createResourceFactory()` calls.\n *\n * Transforms `createResourceFactory( () => { ... } )`\n * to `createResourceFactory( () => { ... }, {id: 'PY7q4rSC'} )`.\n *\n * Also can add cache var option (if desired)\n * and remove uneccesary code where options provided are the default anyway.\n *\n * ID and cache var are not added if either `serialize: false` or `noSsr: true` option is provided.\n *\n * IDs are a hash of:\n *   1. name of package file is in\n *   2. path of file relative to package root\n *   3. counter - which increments for each call\n *\n * This should produce IDs which are unique within an application.\n *\n * @param {Object} api - Babel API\n * @param {Object} options - Options object\n * @param {string} [options.rootPath] - Root dir of package (optional)\n * @param {boolean} [isPackage=false] - `true` if is a package\n * @param {string} [options.packageName] - Package name (optional)\n * @param {string} [options.packageVersion] - Package version (optional)\n * @param {number} [options.idLength] - Length of IDs (optional)\n * @param {string} [options.cacheVar] - `cacheVar` option (optional)\n * @returns {Object} - Babel plugin\n */\nexport default function(api, options) {\n\t// Validate and conform options\n\t// NB `babel-unique-id` validates the other options\n\tlet {cacheVar} = options;\n\tinvariant(\n\t\tcacheVar === undefined || isFullString(cacheVar),\n\t\t`options.cacheVar must be a non-empty string if provided - got ${cacheVar}`\n\t);\n\t// Disregard the default as it's unnecessary\n\tif (cacheVar === DEFAULT_CACHE_VAR) cacheVar = undefined;\n\n\t// ID options\n\tconst idOptions = pick(\n\t\toptions, ['rootPath', 'isPackage', 'packageName', 'packageVersion', 'idLength']\n\t);\n\tif (__DEV__) idOptions.pluginName = PLUGIN_NAME;\n\n\t// Return plugin\n\treturn {\n\t\tvisitor: {\n\t\t\tCallExpression(path, state) {\n\t\t\t\ttransform(path, state, idOptions, cacheVar, api.types);\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Babel transform visitor.\n * Tranforms `createResourceFactory()` function calls to add ID (and cache var if desired).\n * @param {Object} callPath - Babel path for function call\n * @param {Object} state - Babel state object\n * @param {Object} idOptions - Options to pass to `babel-unique-id`\n * @param {string} [cacheVarDefault] - `cacheVar` option (optional)\n * @param {Object} t - Babel types object\n * @returns {undefined}\n */\nfunction transform(callPath, state, idOptions, cacheVarDefault, t) {\n\t// Check is a call to `createResourceFactory()`\n\tif (!callPath.get('callee').isIdentifier({name: 'createResourceFactory'})) return;\n\n\t// Read or create options object\n\tlet optionsPath, cacheVar;\n\tif (callPath.node.arguments.length > 1) {\n\t\t// Read existing options\n\t\toptionsPath = callPath.get('arguments.1');\n\t\tconst propsPaths = getObjectProps(optionsPath);\n\t\tconst {id: idProp, serialize: serializeProp, noSsr: noSsrProp} = propsPaths;\n\t\tlet cacheVarProp = propsPaths.cacheVar;\n\n\t\t// Validate options and remove default options\n\t\tlet serialize = true,\n\t\t\tnoSsr = false;\n\t\tinvariant(\n\t\t\t!idProp || idProp.valuePath.isStringLiteral(),\n\t\t\t'`createResourceFactory()` `id` option must be a string literal if defined'\n\t\t);\n\n\t\tif (noSsrProp) {\n\t\t\tinvariant(\n\t\t\t\tnoSsrProp.valuePath.isBooleanLiteral(),\n\t\t\t\t'`createResourceFactory()` `noSsr` option must be a boolean literal if defined'\n\t\t\t);\n\t\t\tnoSsr = noSsrProp.value;\n\t\t\t// Remove `noSsr: false` as it's the default\n\t\t\tif (!noSsr) noSsrProp.propPath.remove();\n\t\t}\n\n\t\tif (serializeProp) {\n\t\t\tconst {valuePath} = serializeProp;\n\t\t\tif (valuePath.isBooleanLiteral()) {\n\t\t\t\tserialize = serializeProp.value;\n\t\t\t\t// Remove `serialize: true` as it's the default (unless no-SSR option enabled)\n\t\t\t\tif (serialize && !noSsr) serializeProp.propPath.remove();\n\t\t\t} else {\n\t\t\t\tinvariant(\n\t\t\t\t\tvaluePath.isFunctionExpression() || valuePath.isArrowFunctionExpression(),\n\t\t\t\t\t'`createResourceFactory()` `serialize` option must be a boolean or function literal'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (cacheVarProp) {\n\t\t\tinvariant(\n\t\t\t\tcacheVarProp.valuePath.isStringLiteral(),\n\t\t\t\t'`createResourceFactory()` `cacheVar` option must be a string literal if defined'\n\t\t\t);\n\n\t\t\tcacheVar = cacheVarProp.value;\n\t\t\tinvariant(\n\t\t\t\tcacheVar !== '',\n\t\t\t\t'`createResourceFactory()` `cacheVar` option must not be empty string'\n\t\t\t);\n\n\t\t\t// Remove `cacheVar: <default>` as it's the default\n\t\t\tif (cacheVar === DEFAULT_CACHE_VAR) {\n\t\t\t\tcacheVarProp.propPath.remove();\n\t\t\t\tcacheVarProp = undefined;\n\t\t\t}\n\t\t}\n\n\t\t// If serialization or server-rendering disabled, remove ID and cache var props\n\t\t// and do not add ID to options\n\t\tif (!serialize || noSsr) {\n\t\t\tif (idProp) idProp.propPath.remove();\n\t\t\tif (cacheVarProp) cacheVarProp.propPath.remove();\n\t\t\treturn;\n\t\t}\n\n\t\t// If `id` option is already defined, do not add ID to options\n\t\tif (idProp) return;\n\t} else {\n\t\t// Create options object\n\t\tconst optionsNode = t.objectExpression([]);\n\t\tcallPath.pushContainer('arguments', optionsNode);\n\t\toptionsPath = callPath.get('arguments.1');\n\t}\n\n\t// Add ID to options object\n\tconst id = createId(state, idOptions);\n\taddStringPropToObject(optionsPath, 'id', id, t);\n\n\t// Add cache var to options\n\tif (!cacheVar) {\n\t\tcacheVar = cacheVarDefault;\n\t\tif (cacheVar) addStringPropToObject(optionsPath, 'cacheVar', cacheVar, t);\n\t}\n}\n\n/**\n * Get details of all an object literal's properties.\n * Returns an object keyed by prop keys, containing objects of form\n * `{propPath, valuePath, value}`\n *\n * @param {Object} objectPath - Babel path for object\n * @returns {Object} - Object containing prop paths keyed by prop names\n */\nfunction getObjectProps(objectPath) {\n\tinvariant(\n\t\tobjectPath.isObjectExpression(),\n\t\t'`createResourceFactory()` options must be an object literal'\n\t);\n\n\tconst propsPaths = {};\n\tfor (let i = 0; i < objectPath.node.properties.length; i++) {\n\t\tconst propPath = objectPath.get(`properties.${i}`);\n\n\t\tconst keyPath = propPath.get('key');\n\t\tinvariant(\n\t\t\tkeyPath.isIdentifier(),\n\t\t\t'`createResourceFactory()` options must contain only identifiers as keys'\n\t\t);\n\n\t\tconst valuePath = propPath.get('value'),\n\t\t\t{value} = valuePath.node;\n\t\tpropsPaths[keyPath.node.name] = {propPath, valuePath, value};\n\t}\n\n\treturn propsPaths;\n}\n\n/**\n * Add string property to object.\n * @param {Object} objectPath - Babel path for object\n * @param {string} key - Object key\n * @param {string} value - Object value\n * @param {Object} t - Babel types object\n * @returns {undefined}\n */\nfunction addStringPropToObject(objectPath, key, value, t) {\n\taddPropToObject(objectPath, key, t.stringLiteral(value), t);\n}\n\n/**\n * Add property to object.\n * @param {Object} objectPath - Babel path for object\n * @param {string} key - Object key\n * @param {Object} valuePath - Babel path for value\n * @param {Object} t - Babel types object\n * @returns {undefined}\n */\nfunction addPropToObject(objectPath, key, valuePath, t) {\n\tconst propPath = t.objectProperty(t.identifier(key), valuePath);\n\tobjectPath.pushContainer('properties', propPath);\n}\n"],"names":["PLUGIN_NAME","invariant","condition","message","tinyInvariant","api","options","cacheVar","undefined","isFullString","DEFAULT_CACHE_VAR","idOptions","pick","pluginName","visitor","CallExpression","path","state","transform","types","callPath","cacheVarDefault","t","get","isIdentifier","name","optionsPath","node","arguments","length","propsPaths","getObjectProps","id","idProp","serialize","serializeProp","noSsr","noSsrProp","cacheVarProp","valuePath","isStringLiteral","isBooleanLiteral","value","propPath","remove","isFunctionExpression","isArrowFunctionExpression","optionsNode","objectExpression","pushContainer","createId","addStringPropToObject","objectPath","isObjectExpression","i","properties","keyPath","key","addPropToObject","stringLiteral","objectProperty","identifier"],"mappings":"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"}