{"version":3,"file":"index.min.js","sources":["../../node_modules/is-it-type/dist/esm/is-it-type.js","../../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../../node_modules/react-async-ssr/lib/symbols.js","../../node_modules/is-promise/index.js","../../src/shared/constants.js","../../src/client/resource.js","../../src/shared/serverContext.js","../../src/shared/shared.js","../../src/client/createResourceFactory.js","../../src/client/isResource.js","../../src/client/withResources.js","../../src/client/preloadData.js","../../node_modules/is-class-component/dist/esm/is-class-component.js"],"sourcesContent":["/* --------------------\n * is-it-type module\n * Entry point\n * ------------------*/\n// Exports\n\n/*\n * Replication of core-util-is methods.\n * https://www.npmjs.com/package/core-util-is\n */\nfunction isArray(arg) {\n  return Array.isArray(arg);\n}\nfunction isBoolean(arg) {\n  return isType('boolean', arg);\n}\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isUndefined(arg) {\n  return arg === void 0; // eslint-disable-line no-void\n}\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nfunction isNumber(arg) {\n  return isType('number', arg);\n}\nfunction isString(arg) {\n  return isType('string', arg);\n}\nfunction isSymbol(arg) {\n  return isType('symbol', arg);\n}\nfunction isRegExp(arg) {\n  return isTypeByToString('RegExp', arg);\n}\nfunction isObject(arg) {\n  return isType('object', arg) && !isNull(arg);\n}\nfunction isDate(arg) {\n  return isTypeByToString('Date', arg);\n}\nfunction isError(arg) {\n  return isTypeByToString('Error', arg) || arg instanceof Error;\n}\nfunction isFunction(arg) {\n  return isType('function', arg);\n}\nfunction isPrimitive(arg) {\n  var type = getType(arg);\n  return arg == null || type === 'boolean' || type === 'number' || type === 'string' || type === 'symbol';\n}\n/*\n * Additional methods\n */\n// Strings\n\nfunction isEmptyString(arg) {\n  return arg === '';\n}\nfunction isFullString(arg) {\n  return isString(arg) && !isEmptyString(arg);\n} // Objects\n\nfunction isEmptyObject(arg) {\n  return isObject(arg) && Object.keys(arg).length === 0;\n} // Numbers\n\nfunction isInteger(arg) {\n  return Number.isInteger(arg);\n}\nfunction isPositiveInteger(arg) {\n  return isInteger(arg) && arg > 0;\n}\nfunction isPositiveIntegerOrZero(arg) {\n  return isInteger(arg) && arg >= 0;\n}\nfunction isNegativeInteger(arg) {\n  return isInteger(arg) && arg < 0;\n}\nfunction isNegativeIntegerOrZero(arg) {\n  return isInteger(arg) && arg <= 0;\n} // Other\n\nfunction isType(type, arg) {\n  return getType(arg) === type;\n}\n/*\n * Helpers\n */\n\nfunction getType(arg) {\n  return typeof arg;\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isTypeByToString(type, arg) {\n  return toString.call(arg) === \"[object \" + type + \"]\";\n}\n\nexport { isArray, isBoolean, isDate, isEmptyObject, isEmptyString, isError, isFullString, isFunction, isInteger, isNegativeInteger, isNegativeIntegerOrZero, isNull, isNullOrUndefined, isNumber, isObject, isPositiveInteger, isPositiveIntegerOrZero, isPrimitive, isRegExp, isString, isSymbol, isType, isUndefined };\n//# sourceMappingURL=is-it-type.js.map\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","/* --------------------\n * react-async-ssr module\n * Symbols\n * ------------------*/\n\n'use strict';\n\n// Exports\n\nmodule.exports = {\n\tNO_SSR: '$_react-async-ssr/symbols.NO_SSR',\n\tABORT: '$_react-async-ssr/symbols.ABORT',\n\tON_MOUNT: '$_react-async-ssr/symbols.ON_MOUNT'\n};\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","/* --------------------\n * react-lazy-data module\n * Constants\n * ------------------*/\n\n// Exports\n\nexport const IS_RESOURCE = '__react-lazy-data.IS_RESOURCE';\nexport const DEFAULT_CACHE_VAR = '__react-lazy-data.DATA_CACHE';\n","/* --------------------\n * react-lazy-data module\n * Resource class\n * ------------------*/\n\n// Modules\nimport {NO_SSR, ABORT, ON_MOUNT} from 'react-async-ssr/symbols';\nimport isPromise from 'is-promise';\nimport {isFunction} from 'is-it-type';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport {IS_RESOURCE} from '../shared/constants.js';\n\n// Constants\n// Load status\nconst INACTIVE = 0,\n\tLOADING = 1,\n\tLOADED = 2,\n\tERRORED = 3,\n\tABORTED = 4;\n\n// Read status\nconst NONE_CALLED = 0,\n\tREAD_CALLED = 1,\n\tCHILD_CALLED = 2;\n\n// Valid prop types\nconst PROP_TYPES = ['string', 'number', 'symbol'];\n\n// Exports\n\nexport default class Resource {\n\tconstructor(factory, req, cacheKey, context, parent) {\n\t\tthis._factory = factory;\n\t\tthis._req = req;\n\t\tthis._cacheKey = cacheKey;\n\t\tthis._context = context;\n\t\tthis._parent = parent;\n\n\t\tthis._status = parent ? LOADING : INACTIVE;\n\t\tthis._readStatus = NONE_CALLED;\n\t\tthis._isDisposed = false;\n\t\tthis._abort = undefined;\n\t\tthis._children = [];\n\t\tthis._numUndisposedChildren = 0;\n\n\t\t// Create promise\n\t\t// Could make this a thenable which calls `.then()` callbacks synchronously\n\t\t// when `this._resolve()` called, to avoid an extra tick,\n\t\t// but I don't think it's worth the code bloat to save a microtick.\n\t\tconst promise = new Promise((resolve) => {\n\t\t\tthis._resolve = resolve;\n\t\t});\n\n\t\tpromise[ABORT] = this.dispose.bind(this);\n\t\tpromise[ON_MOUNT] = this._mounted.bind(this);\n\t\tif (factory._noSsr) promise[NO_SSR] = true;\n\n\t\tthis._value = promise;\n\t}\n\n\t_load() {\n\t\t// Pass to parent if exists\n\t\tconst parent = this._parent;\n\t\tif (parent) {\n\t\t\tparent._load();\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not load if already loading or aborted\n\t\tif (this._status !== INACTIVE) return;\n\n\t\t// Execute fetch function\n\t\t// TODO Catch synchronously thrown errors in `fetchFn()`\n\t\tconst fetchFn = this._factory._fetchFn;\n\t\tconst promise = fetchFn(this._req);\n\t\tinvariant(isPromise(promise), `Fetch function must return a promise - got ${promise}`);\n\n\t\t// Set loading status\n\t\tthis._status = LOADING;\n\n\t\t// Record promise's abort handler if defined\n\t\tconst {abort} = promise;\n\t\tif (isFunction(abort)) this._abort = abort.bind(promise);\n\n\t\t// Update status when promise resolves\n\t\tpromise.then(\n\t\t\tres => this._resolved(res),\n\t\t\terr => this._rejected(err)\n\t\t);\n\t}\n\n\t_resolved(value) {\n\t\tif (this._status !== LOADING) return;\n\n\t\tthis._resolvedThis(value);\n\n\t\tfor (const {child, prop} of this._children) {\n\t\t\tthis._resolveChild(child, prop);\n\t\t}\n\t}\n\n\t_resolvedThis(value) {\n\t\tthis._status = LOADED;\n\t\tthis._value = value;\n\t\tthis._abort = undefined;\n\t\tthis._resolve();\n\t}\n\n\t_resolveChild(child, prop) {\n\t\tlet value = this._value;\n\n\t\tif (prop !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = value[prop];\n\t\t\t} catch (err) {\n\t\t\t\tchild._rejected(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tchild._resolved(value);\n\t}\n\n\t_rejected(err) {\n\t\tif (this._status !== LOADING) return;\n\n\t\tthis._status = ERRORED;\n\t\tthis._value = err;\n\t\tthis._abort = undefined;\n\t\tthis._resolve();\n\n\t\tfor (const {child} of this._children) {\n\t\t\tchild._rejected(err);\n\t\t}\n\t}\n\n\tread() {\n\t\tthis._validateReadStatus(READ_CALLED);\n\n\t\tif (this._status === LOADED) return this._value;\n\t\tthrow this._value;\n\t}\n\n\tdispose() {\n\t\tif (this._isDisposed) return;\n\t\tthis._isDisposed = true;\n\n\t\tconst parent = this._parent;\n\t\tif (parent) {\n\t\t\tparent._disposeFromChild();\n\t\t} else {\n\t\t\tif ([INACTIVE, LOADING].includes(this._status)) {\n\t\t\t\tthis._status = ABORTED;\n\n\t\t\t\tconst abort = this._abort;\n\t\t\t\tif (abort) {\n\t\t\t\t\tthis._abort = undefined;\n\t\t\t\t\tabort();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst cacheKey = this._cacheKey;\n\t\t\tif (cacheKey !== undefined) this._factory._clearCacheEntry(cacheKey);\n\t\t}\n\t}\n\n\tchild(prop) {\n\t\tinvariant(\n\t\t\tPROP_TYPES.includes(typeof prop),\n\t\t\t`.child() must be passed a string, number or symbol - received ${prop}`\n\t\t);\n\n\t\treturn this._child(prop);\n\t}\n\n\tclone() {\n\t\treturn this._child();\n\t}\n\n\t_child(prop) {\n\t\treturn this._childWithContext(prop, this._context);\n\t}\n\n\t_childWithContext(prop, context) {\n\t\tthis._validateReadStatus(CHILD_CALLED);\n\n\t\tconst child = new Resource(this._factory, this._req, this._cacheKey, context, this);\n\n\t\tconst status = this._status;\n\t\tif (status === LOADED) {\n\t\t\tthis._resolveChild(child, prop);\n\t\t} else if (status === ERRORED) {\n\t\t\tchild._rejected(this._value);\n\t\t}\n\n\t\tthis._children.push({child, prop});\n\t\tthis._numUndisposedChildren++;\n\t\treturn child;\n\t}\n\n\t_disposeFromChild() {\n\t\tthis._numUndisposedChildren--;\n\t\tif (this._numUndisposedChildren === 0) this.dispose();\n\t}\n\n\t_validateReadStatus(newReadStatus) {\n\t\tconst readStatus = this._readStatus;\n\t\tif (readStatus === NONE_CALLED) {\n\t\t\tthis._readStatus = newReadStatus;\n\t\t} else if (readStatus !== newReadStatus) {\n\t\t\tinvariant(false, 'Cannot call both .read() and .child() / .clone() on a resource');\n\t\t}\n\t}\n\n\t_mounted(willRender) {\n\t\tconst context = this._context;\n\t\tif (context) context.register(this, willRender);\n\t}\n\n\tget isLoading() {\n\t\treturn [INACTIVE, LOADING, ABORTED].includes(this._status);\n\t}\n\n\tget isLoaded() {\n\t\treturn this._status === LOADED;\n\t}\n\n\tget isErrored() {\n\t\treturn this._status === ERRORED;\n\t}\n}\n\nResource.prototype[IS_RESOURCE] = true;\n","/* --------------------\n * react-lazy-data module\n * Server context\n * ------------------*/\n\n// Modules\nimport {createContext} from 'react';\n\n// Exports\n\nexport default createContext();\n","/* --------------------\n * react-lazy-data module\n * Shared functions\n * ------------------*/\n\n// Modules\nimport {isObject, isFullString} from 'is-it-type';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport {DEFAULT_CACHE_VAR} from './constants.js';\n\n// Constants\nconst EMPTY_OBJECT = {};\n\n// Exports\n\nexport function getCacheVarFromOptionsWithValidate(options, defaultValue) {\n\tif (options == null) {\n\t\toptions = EMPTY_OBJECT;\n\t} else {\n\t\tvalidateOptions(options);\n\t}\n\n\treturn getCacheVarFromOptions(options, defaultValue);\n}\n\nexport function validateOptions(options) {\n\tinvariant(isObject(options), `options must be an object if provided - got ${options}`);\n}\n\nexport function getCacheVarFromOptions(options, defaultValue) {\n\tconst {cacheVar} = options;\n\tif (cacheVar == null) return defaultValue || DEFAULT_CACHE_VAR;\n\n\tinvariant(\n\t\tisFullString(cacheVar),\n\t\t`options.cacheVar must be a non-empty string if provided - got ${cacheVar}`\n\t);\n\n\treturn cacheVar;\n}\n","/* --------------------\n * react-lazy-data module\n * `createResourceFactory()` function\n * ------------------*/\n\n// Modules\nimport {useRef, useEffect, useContext} from 'react';\nimport {isFunction, isString, isFullString, isBoolean} from 'is-it-type';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport Resource from './resource.js';\nimport ServerContext from '../shared/serverContext.js';\nimport {validateOptions, getCacheVarFromOptions} from '../shared/shared.js';\n\n// Constants\nconst IS_NODE = typeof window === 'undefined';\n\n// Exports\n\nclass ResourceFactory {\n\tconstructor(fetchFn, options) {\n\t\tthis._fetchFn = fetchFn;\n\n\t\t// Validate and conform options\n\t\tlet id, serialize, noSsr, cacheVar;\n\t\tif (options != null) {\n\t\t\tvalidateOptions(options);\n\n\t\t\t({id, serialize, noSsr} = options);\n\n\t\t\t// Validate and conform `id` option\n\t\t\tif (id == null) {\n\t\t\t\tid = undefined;\n\t\t\t} else {\n\t\t\t\tinvariant(\n\t\t\t\t\tisFullString(id),\n\t\t\t\t\t`options.id must be a non-empty string if provided - got ${id}`\n\t\t\t\t);\n\n\t\t\t\t// Using global cache implies serialization\n\t\t\t\tif (serialize == null) {\n\t\t\t\t\tserialize = true;\n\t\t\t\t} else {\n\t\t\t\t\tinvariant(\n\t\t\t\t\t\tserialize !== false,\n\t\t\t\t\t\t'serialization cannot be disabled when using global cache'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Get cache var from options (use default cache var if not provided)\n\t\t\t\tcacheVar = getCacheVarFromOptions(options);\n\t\t\t}\n\n\t\t\t// Validate and conform `serialize` option\n\t\t\tif (serialize == null || serialize === false) {\n\t\t\t\tserialize = undefined;\n\t\t\t} else if (serialize === true) {\n\t\t\t\tserialize = JSON.stringify;\n\t\t\t} else {\n\t\t\t\tinvariant(\n\t\t\t\t\tisFunction(serialize),\n\t\t\t\t\t`options.serialize must be a function or boolean if provided - got ${serialize}`\n\t\t\t\t);\n\t\t\t\tserialize = wrapSerializer(serialize);\n\t\t\t}\n\n\t\t\tinvariant(\n\t\t\t\t!IS_NODE || !serialize || id,\n\t\t\t\t'If using caching on server side, must also provide options.id'\n\t\t\t);\n\n\t\t\t// Validate and conform `noSsr` option\n\t\t\tif (noSsr == null) {\n\t\t\t\tnoSsr = false;\n\t\t\t} else {\n\t\t\t\tinvariant(\n\t\t\t\t\tisBoolean(noSsr),\n\t\t\t\t\t`options.noSsr must be a boolean if provided - got ${noSsr}`\n\t\t\t\t);\n\n\t\t\t\t// No-SSR mode is only enabled on server side\n\t\t\t\tif (!IS_NODE) noSsr = false;\n\t\t\t}\n\t\t} else {\n\t\t\tnoSsr = false;\n\t\t}\n\n\t\tthis._id = id;\n\t\tthis._serialize = serialize;\n\t\tthis._noSsr = noSsr;\n\t\tthis._cacheVar = cacheVar;\n\n\t\t// Init cache\n\t\t// Cache cannot be stored on factory in SSR as the factory is static across different\n\t\t// renders, so data would cross between renders. So it is stored in context instead\n\t\t// when rendering on server side.\n\t\tif (IS_NODE) {\n\t\t\tthis._cache = undefined;\n\t\t\tthis._needContext = !!serialize;\n\t\t} else {\n\t\t\tthis._cache = serialize ? {} : undefined;\n\t\t\tthis._needContext = false;\n\t\t}\n\t}\n\n\tcreate(req) {\n\t\tinvariant(!this._needContext, '`.create` cannot be used on server side with caching enabled');\n\t\treturn this._create(req);\n\t}\n\n\t_create(req, context) {\n\t\tconst resource = this._getResource(req, undefined, context);\n\n\t\t// Load resource immediately\n\t\t// (unless in no-SSR mode, in which case leave it pending forever)\n\t\tif (!this._noSsr) resource._load();\n\n\t\treturn resource;\n\t}\n\n\tuse(req) {\n\t\t// If server-side render, load immediately with context\n\t\tif (IS_NODE) {\n\t\t\tconst context = useContext(ServerContext);\n\t\t\tinvariant(\n\t\t\t\tcontext || !this._needContext,\n\t\t\t\t'Application must be wrapped in a `DataExtractorManager` when using caching on server side'\n\t\t\t);\n\t\t\treturn this._create(req, context);\n\t\t}\n\n\t\t// If no existing resource or req has changed, create one\n\t\tconst resourceRef = useRef();\n\n\t\tlet resource = resourceRef.current;\n\t\tif (!resource || req !== resource._req) {\n\t\t\t// TODO Add `if (resource) resource.dispose();` here to abort faster?\n\t\t\tresource = this._getResource(req, resource);\n\t\t\tresourceRef.current = resource;\n\t\t}\n\n\t\t// On mount, load data\n\t\tuseEffect(() => {\n\t\t\tresource._load();\n\n\t\t\t// On unmount, dispose resource\n\t\t\treturn () => resource.dispose();\n\t\t}, [resource]);\n\n\t\t// Return resource\n\t\treturn resource;\n\t}\n\n\t_getResource(req, previousResource, context) {\n\t\t// If no cache, create new resource without caching\n\t\tconst serialize = this._serialize;\n\t\tif (!serialize) return new Resource(this, req, undefined, context);\n\n\t\t// Serialize request\n\t\tconst cacheKey = serialize(req);\n\n\t\t// If serialized request has not changed, return previous resource\n\t\tif (previousResource && previousResource._cacheKey === cacheKey) return previousResource;\n\n\t\t// Get existing resource from cache\n\t\t// Cache is either in factory or (on server side) in context\n\t\tconst cache = context ? context.getCache(this) : this._cache;\n\t\tlet masterResource = cache[cacheKey];\n\n\t\t// If not found in cache, create resource and add to cache\n\t\tif (!masterResource) {\n\t\t\t// Create new resource\n\t\t\tmasterResource = new Resource(this, req, cacheKey);\n\n\t\t\t// Get data from global cache\n\t\t\tthis._populateFromGlobalCache(masterResource, cacheKey);\n\n\t\t\t// Save resource to local cache\n\t\t\tcache[cacheKey] = masterResource;\n\t\t}\n\n\t\t// Return clone of master resource\n\t\treturn masterResource._childWithContext(undefined, context);\n\t}\n\n\t_clearCacheEntry(cacheKey) {\n\t\tif (this._cache) delete this._cache[cacheKey];\n\t}\n\n\t/**\n\t * Get data from global cache and resolve resource with it.\n\t *\n\t * The global cache is one shot - values are consumed from it, and then removed from\n\t * the cache. So next time the same request is made, it will async fetch fresh data.\n\t * Global cache is intended for SSR hyration. At the end of hydration, the cache should\n\t * be empty.\n\t *\n\t * @param {Object} resource - Resource to populate with data if found in cache\n\t * @param {string} cacheKey - Request cache key\n\t * @returns {undefined}\n\t */\n\t_populateFromGlobalCache(resource, cacheKey) {\n\t\t// Global cache only works on client-side\n\t\tif (IS_NODE) return;\n\n\t\t// If no factory ID, does not use global cache\n\t\tconst id = this._id;\n\t\tif (!id) return;\n\n\t\t// Get global cache\n\t\tconst globalCacheContainer = window[this._cacheVar];\n\t\tif (!globalCacheContainer) return;\n\t\tconst globalCache = globalCacheContainer.data;\n\t\tif (!globalCache) return;\n\n\t\t// Get data cache for this factory\n\t\tconst valuesCache = globalCache[id];\n\t\tif (!valuesCache) return;\n\n\t\t// Get data cached for this request\n\t\t// NB `.hasOwnProperty()` is safe here as we know the cache object is a plain JS object\n\t\tif (!valuesCache.hasOwnProperty(cacheKey)) return; // eslint-disable-line no-prototype-builtins\n\t\tconst value = valuesCache[cacheKey];\n\n\t\t// Delete from global cache\n\t\tdelete valuesCache[cacheKey];\n\t\tif (Object.keys(valuesCache).length === 0) delete globalCache[id];\n\n\t\t// Resolve resource with cached data\n\t\tresource._resolvedThis(value);\n\t}\n}\n\nexport default function createResourceFactory(fetchFn, options) {\n\treturn new ResourceFactory(fetchFn, options);\n}\n\n/*\n * Helper functions\n */\nfunction wrapSerializer(serialize) {\n\treturn (req) => {\n\t\tconst cacheKey = serialize(req);\n\t\tinvariant(isString(cacheKey), `serialize() must return a string - got ${cacheKey}`);\n\t\treturn cacheKey;\n\t};\n}\n","/* --------------------\n * react-lazy-data module\n * `isResource()` function\n * ------------------*/\n\n// Modules\nimport {isFunction} from 'is-it-type';\n\n// Imports\nimport {IS_RESOURCE} from '../shared/constants.js';\n\n// Exports\n\nexport default function isResource(value) {\n\treturn value != null && !!value[IS_RESOURCE] && isFunction(value.read);\n}\n","/* --------------------\n * react-lazy-data module\n * `withResources()` function\n * ------------------*/\n\n// Modules\nimport {createElement} from 'react';\nimport {isFunction} from 'is-it-type';\nimport isClassComponent from 'is-class-component';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport isResource from './isResource.js';\n\n// Exports\n\nexport default function withResources(Component) {\n\tinvariant(\n\t\tisFunction(Component),\n\t\t`withResources() must be passed a React component - got ${Component}`\n\t);\n\n\tconst ComponentWithResources = isClassComponent(Component)\n\t\t? wrapClassComponent(Component)\n\t\t: wrapFunctionComponent(Component);\n\n\tObject.assign(ComponentWithResources, Component);\n\tComponentWithResources.displayName = `withResources(${Component.displayName || Component.name || ''})`;\n\treturn ComponentWithResources;\n}\n\nfunction wrapFunctionComponent(Component) {\n\treturn function(props, ...otherArgs) {\n\t\tprops = processProps(props);\n\t\treturn Component.call(this, props, ...otherArgs); // eslint-disable-line no-invalid-this\n\t};\n}\n\nfunction wrapClassComponent(Component) {\n\treturn (props) => {\n\t\tprops = processProps(props);\n\t\treturn createElement(Component, props);\n\t};\n}\n\nfunction processProps(props) {\n\tprops = {...props};\n\n\tfor (const key in props) {\n\t\tconst value = props[key];\n\t\tif (isResource(value)) props[key] = value.read();\n\t}\n\n\treturn props;\n}\n","/* --------------------\n * react-lazy-data module\n * `preloadData()` function\n * ------------------*/\n\n// Imports\nimport {getCacheVarFromOptionsWithValidate} from '../shared/shared.js';\n\n// Exports\n\nexport default function preloadData(options) {\n\treturn new Promise((resolve) => {\n\t\t// Get cache var from options\n\t\t// NB This is inside promise so function never synchronously throws\n\t\tconst cacheVar = getCacheVarFromOptionsWithValidate(options);\n\n\t\tlet cacheContainer = window[cacheVar];\n\n\t\t// If data already present, resolve\n\t\tif (cacheContainer) {\n\t\t\tresolve(cacheContainer.data);\n\t\t\treturn;\n\t\t}\n\n\t\t// Set up trap to catch when data is written.\n\t\t// When it is, resolve promise.\n\t\tcacheContainer = Object.create(null, {\n\t\t\tdata: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tset(data) {\n\t\t\t\t\tObject.defineProperty(cacheContainer, 'data', {value: data});\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\twindow[cacheVar] = cacheContainer;\n\t});\n}\n","import { isFunction } from 'is-it-type';\n\n/* --------------------\n * is-class-component module\n * Entry point\n * ------------------*/\n\n/**\n * Determine if input is a React class component.\n * Input must have already been checked that it's a function before calling this.\n * @param {Function} Component - Function\n * @return {boolean} - true if is a React class component\n */\n\nfunction isClassComponent(input) {\n  return isFunction(input) && !!(input.prototype && input.prototype.isReactComponent);\n}\n\nexport default isClassComponent;\n//# sourceMappingURL=is-class-component.js.map\n"],"names":["isString","arg","isType","isFunction","isFullString","isEmptyString","type","getType","invariant","condition","message","Error","NO_SSR","ABORT","ON_MOUNT","obj","then","INACTIVE","LOADING","ABORTED","PROP_TYPES","Resource","factory","req","cacheKey","context","parent","_factory","_req","_cacheKey","_context","_parent","_status","_readStatus","_isDisposed","_abort","undefined","_children","_numUndisposedChildren","promise","Promise","resolve","_this","_resolve","this","dispose","bind","_mounted","_noSsr","_value","_load","fetchFn","_fetchFn","isPromise","abort","res","_this2","_resolved","err","_rejected","value","_resolvedThis","child","prop","_resolveChild","read","_validateReadStatus","_disposeFromChild","includes","_clearCacheEntry","_child","clone","_childWithContext","status","push","newReadStatus","readStatus","willRender","register","prototype","createContext","EMPTY_OBJECT","validateOptions","options","isNull","getCacheVarFromOptions","defaultValue","cacheVar","IS_NODE","window","ResourceFactory","id","serialize","noSsr","JSON","stringify","wrapSerializer","_id","_serialize","_cacheVar","_cache","_needContext","create","_create","resource","_getResource","use","useContext","ServerContext","resourceRef","useRef","current","useEffect","previousResource","cache","getCache","masterResource","_populateFromGlobalCache","globalCacheContainer","globalCache","data","valuesCache","hasOwnProperty","Object","keys","length","isResource","processProps","props","key","getCacheVarFromOptionsWithValidate","cacheContainer","configurable","set","defineProperty","Component","input","ComponentWithResources","isReactComponent","createElement","wrapClassComponent","otherArgs","call","wrapFunctionComponent","assign","displayName","name"],"mappings":"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"}