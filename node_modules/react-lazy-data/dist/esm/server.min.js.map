{"version":3,"file":"server.min.js","sources":["../../src/server/server.js"],"sourcesContent":["/* --------------------\n * react-lazy-data module\n * `react-lazy-data/server` entry point\n * Server-side functions\n * ------------------*/\n\n// Modules\nimport {createElement} from 'react';\n\n// Imports\nimport {getCacheVarFromOptionsWithValidate} from '../shared/shared.js';\nimport ServerContext from '../shared/serverContext.js';\n\n// Exports\n\nexport class DataExtractor {\n\tconstructor(options) {\n\t\t// Get cache var from options\n\t\tthis._cacheVar = getCacheVarFromOptionsWithValidate(options);\n\n\t\t// Init data cache\n\t\tthis._cache = {};\n\t}\n\n\tcollectData(children) {\n\t\treturn DataExtractorManager({extractor: this, children});\n\t}\n\n\tgetData() {\n\t\treturn this._cache;\n\t}\n\n\tgetScript(options) {\n\t\t// Get cache var from options, or constructor options\n\t\tconst cacheVar = getCacheVarFromOptionsWithValidate(options, this._cacheVar);\n\n\t\t// Get data\n\t\tconst data = this.getData();\n\n\t\t// Return script tag containing data\n\t\tconst cacheVarStr = jsonify(cacheVar);\n\t\treturn `<script>(window[${cacheVarStr}]=window[${cacheVarStr}]||{}).data=${jsonify(data)}</script>`;\n\t}\n}\n\nclass Ctx {\n\tconstructor(extractor) {\n\t\tthis._cache = {};\n\t\tthis._ssrCache = extractor._cache;\n\t}\n\n\tgetCache(factory) {\n\t\t// Get factory ID\n\t\tconst id = factory._id;\n\t\tif (!id) return undefined;\n\n\t\treturn getValuesCache(this._cache, id);\n\t}\n\n\tregister(resource, willRender) {\n\t\t// If will not render, exit - data is not needed\n\t\tif (!willRender) return;\n\n\t\t// Get factory ID\n\t\tconst id = resource._factory._id;\n\t\tif (!id) return;\n\n\t\t// Get master resource\n\t\twhile (true) { // eslint-disable-line no-constant-condition\n\t\t\tconst parent = resource._parent;\n\t\t\tif (!parent) break;\n\t\t\tresource = parent;\n\t\t}\n\n\t\t// Save data from resource to cache\n\t\tconst valuesCache = getValuesCache(this._ssrCache, id);\n\t\tvaluesCache[resource._cacheKey] = resource._value;\n\t}\n}\n\nexport function DataExtractorManager({extractor, children}) {\n\treturn createElement(\n\t\tServerContext.Provider,\n\t\t{value: new Ctx(extractor), children}\n\t);\n}\n\n/*\n * Helper functions\n */\nfunction getValuesCache(cache, id) {\n\tlet valuesCache = cache[id];\n\tif (!valuesCache) {\n\t\tvaluesCache = {};\n\t\tcache[id] = valuesCache;\n\t}\n\treturn valuesCache;\n}\n\n/**\n * Convert to JSON for inclusion in HTML.\n * Like `JSON.stringify()` except escapes '</' to avoid XSS vulnerability\n * if data contains e.g. `</script><script>evil()</script>`.\n * https://sophiebits.com/2012/08/03/preventing-xss-json.html\n * @param {*} input - Input (any type)\n * @returns {string} - JSON string\n */\nfunction jsonify(input) {\n\treturn JSON.stringify(input).replace(/<\\//g, '<\\\\/');\n}\n"],"names":["DataExtractor","constructor","options","_cacheVar","getCacheVarFromOptionsWithValidate","_cache","collectData","children","DataExtractorManager","extractor","this","getData","getScript","cacheVar","data","cacheVarStr","jsonify","Ctx","_ssrCache","getCache","factory","id","_id","getValuesCache","register","resource","willRender","_factory","parent","_parent","_cacheKey","_value","createElement","ServerContext","Provider","value","cache","valuesCache","input","JSON","stringify","replace"],"mappings":"sJAeO,MAAMA,EACZC,YAAYC,QAENC,UAAYC,EAAmCF,QAG/CG,OAAS,GAGfC,YAAYC,UACJC,EAAqB,CAACC,UAAWC,KAAMH,SAAAA,IAG/CI,iBACQD,KAAKL,OAGbO,UAAUV,SAEHW,EAAWT,EAAmCF,EAASQ,KAAKP,WAG5DW,EAAOJ,KAAKC,UAGZI,EAAcC,EAAQH,SACpB,mBAAkBE,aAAuBA,gBAA0BC,EAAQF,gBAIrF,MAAMG,EACLhB,YAAYQ,QACNJ,OAAS,QACTa,UAAYT,EAAUJ,OAG5Bc,SAASC,SAEFC,EAAKD,EAAQE,OACdD,SAEEE,EAAeb,KAAKL,OAAQgB,GAGpCG,SAASC,EAAUC,OAEbA,EAAY,aAGXL,EAAKI,EAASE,SAASL,OACxBD,UAGQ,OACNO,EAASH,EAASI,YACnBD,EAAQ,MACbH,EAAWG,EAIQL,EAAeb,KAAKQ,UAAWG,GACvCI,EAASK,WAAaL,EAASM,SAItC,SAASvB,GAAqBC,UAACA,EAADF,SAAYA,WACzCyB,EACNC,EAAcC,SACd,CAACC,MAAO,IAAIlB,EAAIR,GAAYF,SAAAA,IAO9B,SAASgB,EAAea,EAAOf,OAC1BgB,EAAcD,EAAMf,UACnBgB,IACJA,EAAc,GACdD,EAAMf,GAAMgB,GAENA,EAWR,SAASrB,EAAQsB,UACTC,KAAKC,UAAUF,GAAOG,QAAQ,OAAQ"}