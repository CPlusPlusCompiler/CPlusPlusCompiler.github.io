{"version":3,"file":"index.js","sources":["../../src/client/resource.js","../../src/client/createResourceFactory.js","../../src/client/isResource.js","../../src/client/withResources.js","../../src/client/preloadData.js"],"sourcesContent":["/* --------------------\n * react-lazy-data module\n * Resource class\n * ------------------*/\n\n// Modules\nimport {NO_SSR, ABORT, ON_MOUNT} from 'react-async-ssr/symbols';\nimport isPromise from 'is-promise';\nimport {isFunction} from 'is-it-type';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport {IS_RESOURCE} from '../shared/constants.js';\n\n// Constants\n// Load status\nconst INACTIVE = 0,\n\tLOADING = 1,\n\tLOADED = 2,\n\tERRORED = 3,\n\tABORTED = 4;\n\n// Read status\nconst NONE_CALLED = 0,\n\tREAD_CALLED = 1,\n\tCHILD_CALLED = 2;\n\n// Valid prop types\nconst PROP_TYPES = ['string', 'number', 'symbol'];\n\n// Exports\n\nexport default class Resource {\n\tconstructor(factory, req, cacheKey, context, parent) {\n\t\tthis._factory = factory;\n\t\tthis._req = req;\n\t\tthis._cacheKey = cacheKey;\n\t\tthis._context = context;\n\t\tthis._parent = parent;\n\n\t\tthis._status = parent ? LOADING : INACTIVE;\n\t\tthis._readStatus = NONE_CALLED;\n\t\tthis._isDisposed = false;\n\t\tthis._abort = undefined;\n\t\tthis._children = [];\n\t\tthis._numUndisposedChildren = 0;\n\n\t\t// Create promise\n\t\t// Could make this a thenable which calls `.then()` callbacks synchronously\n\t\t// when `this._resolve()` called, to avoid an extra tick,\n\t\t// but I don't think it's worth the code bloat to save a microtick.\n\t\tconst promise = new Promise((resolve) => {\n\t\t\tthis._resolve = resolve;\n\t\t});\n\n\t\tpromise[ABORT] = this.dispose.bind(this);\n\t\tpromise[ON_MOUNT] = this._mounted.bind(this);\n\t\tif (factory._noSsr) promise[NO_SSR] = true;\n\n\t\tthis._value = promise;\n\t}\n\n\t_load() {\n\t\t// Pass to parent if exists\n\t\tconst parent = this._parent;\n\t\tif (parent) {\n\t\t\tparent._load();\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not load if already loading or aborted\n\t\tif (this._status !== INACTIVE) return;\n\n\t\t// Execute fetch function\n\t\t// TODO Catch synchronously thrown errors in `fetchFn()`\n\t\tconst fetchFn = this._factory._fetchFn;\n\t\tconst promise = fetchFn(this._req);\n\t\tinvariant(isPromise(promise), `Fetch function must return a promise - got ${promise}`);\n\n\t\t// Set loading status\n\t\tthis._status = LOADING;\n\n\t\t// Record promise's abort handler if defined\n\t\tconst {abort} = promise;\n\t\tif (isFunction(abort)) this._abort = abort.bind(promise);\n\n\t\t// Update status when promise resolves\n\t\tpromise.then(\n\t\t\tres => this._resolved(res),\n\t\t\terr => this._rejected(err)\n\t\t);\n\t}\n\n\t_resolved(value) {\n\t\tif (this._status !== LOADING) return;\n\n\t\tthis._resolvedThis(value);\n\n\t\tfor (const {child, prop} of this._children) {\n\t\t\tthis._resolveChild(child, prop);\n\t\t}\n\t}\n\n\t_resolvedThis(value) {\n\t\tthis._status = LOADED;\n\t\tthis._value = value;\n\t\tthis._abort = undefined;\n\t\tthis._resolve();\n\t}\n\n\t_resolveChild(child, prop) {\n\t\tlet value = this._value;\n\n\t\tif (prop !== undefined) {\n\t\t\ttry {\n\t\t\t\tvalue = value[prop];\n\t\t\t} catch (err) {\n\t\t\t\tchild._rejected(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tchild._resolved(value);\n\t}\n\n\t_rejected(err) {\n\t\tif (this._status !== LOADING) return;\n\n\t\tthis._status = ERRORED;\n\t\tthis._value = err;\n\t\tthis._abort = undefined;\n\t\tthis._resolve();\n\n\t\tfor (const {child} of this._children) {\n\t\t\tchild._rejected(err);\n\t\t}\n\t}\n\n\tread() {\n\t\tthis._validateReadStatus(READ_CALLED);\n\n\t\tif (this._status === LOADED) return this._value;\n\t\tthrow this._value;\n\t}\n\n\tdispose() {\n\t\tif (this._isDisposed) return;\n\t\tthis._isDisposed = true;\n\n\t\tconst parent = this._parent;\n\t\tif (parent) {\n\t\t\tparent._disposeFromChild();\n\t\t} else {\n\t\t\tif ([INACTIVE, LOADING].includes(this._status)) {\n\t\t\t\tthis._status = ABORTED;\n\n\t\t\t\tconst abort = this._abort;\n\t\t\t\tif (abort) {\n\t\t\t\t\tthis._abort = undefined;\n\t\t\t\t\tabort();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst cacheKey = this._cacheKey;\n\t\t\tif (cacheKey !== undefined) this._factory._clearCacheEntry(cacheKey);\n\t\t}\n\t}\n\n\tchild(prop) {\n\t\tinvariant(\n\t\t\tPROP_TYPES.includes(typeof prop),\n\t\t\t`.child() must be passed a string, number or symbol - received ${prop}`\n\t\t);\n\n\t\treturn this._child(prop);\n\t}\n\n\tclone() {\n\t\treturn this._child();\n\t}\n\n\t_child(prop) {\n\t\treturn this._childWithContext(prop, this._context);\n\t}\n\n\t_childWithContext(prop, context) {\n\t\tthis._validateReadStatus(CHILD_CALLED);\n\n\t\tconst child = new Resource(this._factory, this._req, this._cacheKey, context, this);\n\n\t\tconst status = this._status;\n\t\tif (status === LOADED) {\n\t\t\tthis._resolveChild(child, prop);\n\t\t} else if (status === ERRORED) {\n\t\t\tchild._rejected(this._value);\n\t\t}\n\n\t\tthis._children.push({child, prop});\n\t\tthis._numUndisposedChildren++;\n\t\treturn child;\n\t}\n\n\t_disposeFromChild() {\n\t\tthis._numUndisposedChildren--;\n\t\tif (this._numUndisposedChildren === 0) this.dispose();\n\t}\n\n\t_validateReadStatus(newReadStatus) {\n\t\tconst readStatus = this._readStatus;\n\t\tif (readStatus === NONE_CALLED) {\n\t\t\tthis._readStatus = newReadStatus;\n\t\t} else if (readStatus !== newReadStatus) {\n\t\t\tinvariant(false, 'Cannot call both .read() and .child() / .clone() on a resource');\n\t\t}\n\t}\n\n\t_mounted(willRender) {\n\t\tconst context = this._context;\n\t\tif (context) context.register(this, willRender);\n\t}\n\n\tget isLoading() {\n\t\treturn [INACTIVE, LOADING, ABORTED].includes(this._status);\n\t}\n\n\tget isLoaded() {\n\t\treturn this._status === LOADED;\n\t}\n\n\tget isErrored() {\n\t\treturn this._status === ERRORED;\n\t}\n}\n\nResource.prototype[IS_RESOURCE] = true;\n","/* --------------------\n * react-lazy-data module\n * `createResourceFactory()` function\n * ------------------*/\n\n// Modules\nimport {useRef, useEffect, useContext} from 'react';\nimport {isFunction, isString, isFullString, isBoolean} from 'is-it-type';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport Resource from './resource.js';\nimport ServerContext from '../shared/serverContext.js';\nimport {validateOptions, getCacheVarFromOptions} from '../shared/shared.js';\n\n// Constants\nconst IS_NODE = typeof window === 'undefined';\n\n// Exports\n\nclass ResourceFactory {\n\tconstructor(fetchFn, options) {\n\t\tthis._fetchFn = fetchFn;\n\n\t\t// Validate and conform options\n\t\tlet id, serialize, noSsr, cacheVar;\n\t\tif (options != null) {\n\t\t\tvalidateOptions(options);\n\n\t\t\t({id, serialize, noSsr} = options);\n\n\t\t\t// Validate and conform `id` option\n\t\t\tif (id == null) {\n\t\t\t\tid = undefined;\n\t\t\t} else {\n\t\t\t\tinvariant(\n\t\t\t\t\tisFullString(id),\n\t\t\t\t\t`options.id must be a non-empty string if provided - got ${id}`\n\t\t\t\t);\n\n\t\t\t\t// Using global cache implies serialization\n\t\t\t\tif (serialize == null) {\n\t\t\t\t\tserialize = true;\n\t\t\t\t} else {\n\t\t\t\t\tinvariant(\n\t\t\t\t\t\tserialize !== false,\n\t\t\t\t\t\t'serialization cannot be disabled when using global cache'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Get cache var from options (use default cache var if not provided)\n\t\t\t\tcacheVar = getCacheVarFromOptions(options);\n\t\t\t}\n\n\t\t\t// Validate and conform `serialize` option\n\t\t\tif (serialize == null || serialize === false) {\n\t\t\t\tserialize = undefined;\n\t\t\t} else if (serialize === true) {\n\t\t\t\tserialize = JSON.stringify;\n\t\t\t} else {\n\t\t\t\tinvariant(\n\t\t\t\t\tisFunction(serialize),\n\t\t\t\t\t`options.serialize must be a function or boolean if provided - got ${serialize}`\n\t\t\t\t);\n\t\t\t\tserialize = wrapSerializer(serialize);\n\t\t\t}\n\n\t\t\tinvariant(\n\t\t\t\t!IS_NODE || !serialize || id,\n\t\t\t\t'If using caching on server side, must also provide options.id'\n\t\t\t);\n\n\t\t\t// Validate and conform `noSsr` option\n\t\t\tif (noSsr == null) {\n\t\t\t\tnoSsr = false;\n\t\t\t} else {\n\t\t\t\tinvariant(\n\t\t\t\t\tisBoolean(noSsr),\n\t\t\t\t\t`options.noSsr must be a boolean if provided - got ${noSsr}`\n\t\t\t\t);\n\n\t\t\t\t// No-SSR mode is only enabled on server side\n\t\t\t\tif (!IS_NODE) noSsr = false;\n\t\t\t}\n\t\t} else {\n\t\t\tnoSsr = false;\n\t\t}\n\n\t\tthis._id = id;\n\t\tthis._serialize = serialize;\n\t\tthis._noSsr = noSsr;\n\t\tthis._cacheVar = cacheVar;\n\n\t\t// Init cache\n\t\t// Cache cannot be stored on factory in SSR as the factory is static across different\n\t\t// renders, so data would cross between renders. So it is stored in context instead\n\t\t// when rendering on server side.\n\t\tif (IS_NODE) {\n\t\t\tthis._cache = undefined;\n\t\t\tthis._needContext = !!serialize;\n\t\t} else {\n\t\t\tthis._cache = serialize ? {} : undefined;\n\t\t\tthis._needContext = false;\n\t\t}\n\t}\n\n\tcreate(req) {\n\t\tinvariant(!this._needContext, '`.create` cannot be used on server side with caching enabled');\n\t\treturn this._create(req);\n\t}\n\n\t_create(req, context) {\n\t\tconst resource = this._getResource(req, undefined, context);\n\n\t\t// Load resource immediately\n\t\t// (unless in no-SSR mode, in which case leave it pending forever)\n\t\tif (!this._noSsr) resource._load();\n\n\t\treturn resource;\n\t}\n\n\tuse(req) {\n\t\t// If server-side render, load immediately with context\n\t\tif (IS_NODE) {\n\t\t\tconst context = useContext(ServerContext);\n\t\t\tinvariant(\n\t\t\t\tcontext || !this._needContext,\n\t\t\t\t'Application must be wrapped in a `DataExtractorManager` when using caching on server side'\n\t\t\t);\n\t\t\treturn this._create(req, context);\n\t\t}\n\n\t\t// If no existing resource or req has changed, create one\n\t\tconst resourceRef = useRef();\n\n\t\tlet resource = resourceRef.current;\n\t\tif (!resource || req !== resource._req) {\n\t\t\t// TODO Add `if (resource) resource.dispose();` here to abort faster?\n\t\t\tresource = this._getResource(req, resource);\n\t\t\tresourceRef.current = resource;\n\t\t}\n\n\t\t// On mount, load data\n\t\tuseEffect(() => {\n\t\t\tresource._load();\n\n\t\t\t// On unmount, dispose resource\n\t\t\treturn () => resource.dispose();\n\t\t}, [resource]);\n\n\t\t// Return resource\n\t\treturn resource;\n\t}\n\n\t_getResource(req, previousResource, context) {\n\t\t// If no cache, create new resource without caching\n\t\tconst serialize = this._serialize;\n\t\tif (!serialize) return new Resource(this, req, undefined, context);\n\n\t\t// Serialize request\n\t\tconst cacheKey = serialize(req);\n\n\t\t// If serialized request has not changed, return previous resource\n\t\tif (previousResource && previousResource._cacheKey === cacheKey) return previousResource;\n\n\t\t// Get existing resource from cache\n\t\t// Cache is either in factory or (on server side) in context\n\t\tconst cache = context ? context.getCache(this) : this._cache;\n\t\tlet masterResource = cache[cacheKey];\n\n\t\t// If not found in cache, create resource and add to cache\n\t\tif (!masterResource) {\n\t\t\t// Create new resource\n\t\t\tmasterResource = new Resource(this, req, cacheKey);\n\n\t\t\t// Get data from global cache\n\t\t\tthis._populateFromGlobalCache(masterResource, cacheKey);\n\n\t\t\t// Save resource to local cache\n\t\t\tcache[cacheKey] = masterResource;\n\t\t}\n\n\t\t// Return clone of master resource\n\t\treturn masterResource._childWithContext(undefined, context);\n\t}\n\n\t_clearCacheEntry(cacheKey) {\n\t\tif (this._cache) delete this._cache[cacheKey];\n\t}\n\n\t/**\n\t * Get data from global cache and resolve resource with it.\n\t *\n\t * The global cache is one shot - values are consumed from it, and then removed from\n\t * the cache. So next time the same request is made, it will async fetch fresh data.\n\t * Global cache is intended for SSR hyration. At the end of hydration, the cache should\n\t * be empty.\n\t *\n\t * @param {Object} resource - Resource to populate with data if found in cache\n\t * @param {string} cacheKey - Request cache key\n\t * @returns {undefined}\n\t */\n\t_populateFromGlobalCache(resource, cacheKey) {\n\t\t// Global cache only works on client-side\n\t\tif (IS_NODE) return;\n\n\t\t// If no factory ID, does not use global cache\n\t\tconst id = this._id;\n\t\tif (!id) return;\n\n\t\t// Get global cache\n\t\tconst globalCacheContainer = window[this._cacheVar];\n\t\tif (!globalCacheContainer) return;\n\t\tconst globalCache = globalCacheContainer.data;\n\t\tif (!globalCache) return;\n\n\t\t// Get data cache for this factory\n\t\tconst valuesCache = globalCache[id];\n\t\tif (!valuesCache) return;\n\n\t\t// Get data cached for this request\n\t\t// NB `.hasOwnProperty()` is safe here as we know the cache object is a plain JS object\n\t\tif (!valuesCache.hasOwnProperty(cacheKey)) return; // eslint-disable-line no-prototype-builtins\n\t\tconst value = valuesCache[cacheKey];\n\n\t\t// Delete from global cache\n\t\tdelete valuesCache[cacheKey];\n\t\tif (Object.keys(valuesCache).length === 0) delete globalCache[id];\n\n\t\t// Resolve resource with cached data\n\t\tresource._resolvedThis(value);\n\t}\n}\n\nexport default function createResourceFactory(fetchFn, options) {\n\treturn new ResourceFactory(fetchFn, options);\n}\n\n/*\n * Helper functions\n */\nfunction wrapSerializer(serialize) {\n\treturn (req) => {\n\t\tconst cacheKey = serialize(req);\n\t\tinvariant(isString(cacheKey), `serialize() must return a string - got ${cacheKey}`);\n\t\treturn cacheKey;\n\t};\n}\n","/* --------------------\n * react-lazy-data module\n * `isResource()` function\n * ------------------*/\n\n// Modules\nimport {isFunction} from 'is-it-type';\n\n// Imports\nimport {IS_RESOURCE} from '../shared/constants.js';\n\n// Exports\n\nexport default function isResource(value) {\n\treturn value != null && !!value[IS_RESOURCE] && isFunction(value.read);\n}\n","/* --------------------\n * react-lazy-data module\n * `withResources()` function\n * ------------------*/\n\n// Modules\nimport {createElement} from 'react';\nimport {isFunction} from 'is-it-type';\nimport isClassComponent from 'is-class-component';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport isResource from './isResource.js';\n\n// Exports\n\nexport default function withResources(Component) {\n\tinvariant(\n\t\tisFunction(Component),\n\t\t`withResources() must be passed a React component - got ${Component}`\n\t);\n\n\tconst ComponentWithResources = isClassComponent(Component)\n\t\t? wrapClassComponent(Component)\n\t\t: wrapFunctionComponent(Component);\n\n\tObject.assign(ComponentWithResources, Component);\n\tComponentWithResources.displayName = `withResources(${Component.displayName || Component.name || ''})`;\n\treturn ComponentWithResources;\n}\n\nfunction wrapFunctionComponent(Component) {\n\treturn function(props, ...otherArgs) {\n\t\tprops = processProps(props);\n\t\treturn Component.call(this, props, ...otherArgs); // eslint-disable-line no-invalid-this\n\t};\n}\n\nfunction wrapClassComponent(Component) {\n\treturn (props) => {\n\t\tprops = processProps(props);\n\t\treturn createElement(Component, props);\n\t};\n}\n\nfunction processProps(props) {\n\tprops = {...props};\n\n\tfor (const key in props) {\n\t\tconst value = props[key];\n\t\tif (isResource(value)) props[key] = value.read();\n\t}\n\n\treturn props;\n}\n","/* --------------------\n * react-lazy-data module\n * `preloadData()` function\n * ------------------*/\n\n// Imports\nimport {getCacheVarFromOptionsWithValidate} from '../shared/shared.js';\n\n// Exports\n\nexport default function preloadData(options) {\n\treturn new Promise((resolve) => {\n\t\t// Get cache var from options\n\t\t// NB This is inside promise so function never synchronously throws\n\t\tconst cacheVar = getCacheVarFromOptionsWithValidate(options);\n\n\t\tlet cacheContainer = window[cacheVar];\n\n\t\t// If data already present, resolve\n\t\tif (cacheContainer) {\n\t\t\tresolve(cacheContainer.data);\n\t\t\treturn;\n\t\t}\n\n\t\t// Set up trap to catch when data is written.\n\t\t// When it is, resolve promise.\n\t\tcacheContainer = Object.create(null, {\n\t\t\tdata: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tset(data) {\n\t\t\t\t\tObject.defineProperty(cacheContainer, 'data', {value: data});\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\twindow[cacheVar] = cacheContainer;\n\t});\n}\n"],"names":["INACTIVE","LOADING","LOADED","ERRORED","ABORTED","NONE_CALLED","READ_CALLED","CHILD_CALLED","PROP_TYPES","Resource","factory","req","cacheKey","context","parent","_factory","_req","_cacheKey","_context","_parent","_status","_readStatus","_isDisposed","_abort","undefined","_children","_numUndisposedChildren","promise","Promise","resolve","_resolve","ABORT","dispose","bind","ON_MOUNT","_mounted","_noSsr","NO_SSR","_value","_load","fetchFn","_fetchFn","isPromise","invariant","abort","isFunction","then","res","_resolved","err","_rejected","value","_resolvedThis","child","prop","_resolveChild","read","_validateReadStatus","_disposeFromChild","includes","_clearCacheEntry","_child","clone","_childWithContext","status","push","newReadStatus","readStatus","willRender","register","prototype","IS_RESOURCE","IS_NODE","window","ResourceFactory","options","id","serialize","noSsr","cacheVar","validateOptions","isFullString","getCacheVarFromOptions","JSON","stringify","wrapSerializer","isBoolean","_id","_serialize","_cacheVar","_cache","_needContext","create","_create","resource","_getResource","use","useContext","ServerContext","resourceRef","useRef","current","useEffect","previousResource","cache","getCache","masterResource","_populateFromGlobalCache","globalCacheContainer","globalCache","data","valuesCache","hasOwnProperty","Object","keys","length","createResourceFactory","isString","isResource","withResources","Component","ComponentWithResources","isClassComponent","wrapClassComponent","wrapFunctionComponent","assign","displayName","name","props","processProps","otherArgs","call","createElement","key","preloadData","getCacheVarFromOptionsWithValidate","cacheContainer","configurable","set","defineProperty"],"mappings":";;;;;;;;;;;AAeA;;AACA,IAAMA,QAAQ,GAAG,CAAjB;AAAA,IACCC,OAAO,GAAG,CADX;AAAA,IAECC,MAAM,GAAG,CAFV;AAAA,IAGCC,OAAO,GAAG,CAHX;AAAA,IAICC,OAAO,GAAG,CAJX;;AAOA,IAAMC,WAAW,GAAG,CAApB;AAAA,IACCC,WAAW,GAAG,CADf;AAAA,IAECC,YAAY,GAAG,CAFhB;;AAKA,IAAMC,UAAU,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAAnB;;IAIqBC;AACpB,oBAAYC,OAAZ,EAAqBC,GAArB,EAA0BC,QAA1B,EAAoCC,OAApC,EAA6CC,MAA7C,EAAqD;AAAA;;AACpD,SAAKC,QAAL,GAAgBL,OAAhB;AACA,SAAKM,IAAL,GAAYL,GAAZ;AACA,SAAKM,SAAL,GAAiBL,QAAjB;AACA,SAAKM,QAAL,GAAgBL,OAAhB;AACA,SAAKM,OAAL,GAAeL,MAAf;AAEA,SAAKM,OAAL,GAAeN,MAAM,GAAGb,OAAH,GAAaD,QAAlC;AACA,SAAKqB,WAAL,GAAmBhB,WAAnB;AACA,SAAKiB,WAAL,GAAmB,KAAnB;AACA,SAAKC,MAAL,GAAcC,SAAd;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,sBAAL,GAA8B,CAA9B,CAZoD;AAepD;AACA;AACA;;AACA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACxC,MAAA,KAAI,CAACC,QAAL,GAAgBD,OAAhB;AACA,KAFe,CAAhB;AAIAF,IAAAA,OAAO,CAACI,KAAD,CAAP,GAAiB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAjB;AACAN,IAAAA,OAAO,CAACO,QAAD,CAAP,GAAoB,KAAKC,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAApB;AACA,QAAIvB,OAAO,CAAC0B,MAAZ,EAAoBT,OAAO,CAACU,MAAD,CAAP,GAAkB,IAAlB;AAEpB,SAAKC,MAAL,GAAcX,OAAd;AACA;;;;SAEDY,QAAA,iBAAQ;AAAA;;AACP;AACA,QAAMzB,MAAM,GAAG,KAAKK,OAApB;;AACA,QAAIL,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACyB,KAAP;;AACA;AACA,KANM;;;AASP,QAAI,KAAKnB,OAAL,KAAiBpB,QAArB,EAA+B,OATxB;AAYP;;AACA,QAAMwC,OAAO,GAAG,KAAKzB,QAAL,CAAc0B,QAA9B;AACA,QAAMd,OAAO,GAAGa,OAAO,CAAC,KAAKxB,IAAN,CAAvB;AACA,KAAU0B,SAAS,CAACf,OAAD,CAAnB,IAAAgB,SAAS,wDAAmEhB,OAAnE,CAAT,CAAA,UAfO;;AAkBP,SAAKP,OAAL,GAAenB,OAAf,CAlBO;;AAAA,QAqBA2C,KArBA,GAqBSjB,OArBT,CAqBAiB,KArBA;AAsBP,QAAIC,UAAU,CAACD,KAAD,CAAd,EAAuB,KAAKrB,MAAL,GAAcqB,KAAK,CAACX,IAAN,CAAWN,OAAX,CAAd,CAtBhB;;AAyBPA,IAAAA,OAAO,CAACmB,IAAR,CACC,UAAAC,GAAG;AAAA,aAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,CAAJ;AAAA,KADJ,EAEC,UAAAE,GAAG;AAAA,aAAI,MAAI,CAACC,SAAL,CAAeD,GAAf,CAAJ;AAAA,KAFJ;AAIA;;SAEDD,YAAA,mBAAUG,KAAV,EAAiB;AAChB,QAAI,KAAK/B,OAAL,KAAiBnB,OAArB,EAA8B;;AAE9B,SAAKmD,aAAL,CAAmBD,KAAnB;;AAHgB,yCAKY,KAAK1B,SALjB,wCAK4B;AAAA;AAAA,UAAhC4B,KAAgC,uBAAhCA,KAAgC;AAAA,UAAzBC,IAAyB,uBAAzBA,IAAyB;;AAC3C,WAAKC,aAAL,CAAmBF,KAAnB,EAA0BC,IAA1B;AACA;AACD;;SAEDF,gBAAA,uBAAcD,KAAd,EAAqB;AACpB,SAAK/B,OAAL,GAAelB,MAAf;AACA,SAAKoC,MAAL,GAAca,KAAd;AACA,SAAK5B,MAAL,GAAcC,SAAd;;AACA,SAAKM,QAAL;AACA;;SAEDyB,gBAAA,uBAAcF,KAAd,EAAqBC,IAArB,EAA2B;AAC1B,QAAIH,KAAK,GAAG,KAAKb,MAAjB;;AAEA,QAAIgB,IAAI,KAAK9B,SAAb,EAAwB;AACvB,UAAI;AACH2B,QAAAA,KAAK,GAAGA,KAAK,CAACG,IAAD,CAAb;AACA,OAFD,CAEE,OAAOL,GAAP,EAAY;AACbI,QAAAA,KAAK,CAACH,SAAN,CAAgBD,GAAhB;;AACA;AACA;AACD;;AAEDI,IAAAA,KAAK,CAACL,SAAN,CAAgBG,KAAhB;AACA;;SAEDD,YAAA,mBAAUD,GAAV,EAAe;AACd,QAAI,KAAK7B,OAAL,KAAiBnB,OAArB,EAA8B;AAE9B,SAAKmB,OAAL,GAAejB,OAAf;AACA,SAAKmC,MAAL,GAAcW,GAAd;AACA,SAAK1B,MAAL,GAAcC,SAAd;;AACA,SAAKM,QAAL;;AANc,yCAQQ,KAAKL,SARb,wCAQwB;AAAA,UAA1B4B,KAA0B,yBAA1BA,KAA0B;;AACrCA,MAAAA,KAAK,CAACH,SAAN,CAAgBD,GAAhB;AACA;AACD;;SAEDO,OAAA,gBAAO;AACN,SAAKC,mBAAL,CAAyBnD,WAAzB;;AAEA,QAAI,KAAKc,OAAL,KAAiBlB,MAArB,EAA6B,OAAO,KAAKoC,MAAZ;AAC7B,UAAM,KAAKA,MAAX;AACA;;SAEDN,UAAA,mBAAU;AACT,QAAI,KAAKV,WAAT,EAAsB;AACtB,SAAKA,WAAL,GAAmB,IAAnB;AAEA,QAAMR,MAAM,GAAG,KAAKK,OAApB;;AACA,QAAIL,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAAC4C,iBAAP;AACA,KAFD,MAEO;AACN,UAAI,CAAC1D,QAAD,EAAWC,OAAX,EAAoB0D,QAApB,CAA6B,KAAKvC,OAAlC,CAAJ,EAAgD;AAC/C,aAAKA,OAAL,GAAehB,OAAf;AAEA,YAAMwC,KAAK,GAAG,KAAKrB,MAAnB;;AACA,YAAIqB,KAAJ,EAAW;AACV,eAAKrB,MAAL,GAAcC,SAAd;AACAoB,UAAAA,KAAK;AACL;AACD;;AAED,UAAMhC,QAAQ,GAAG,KAAKK,SAAtB;AACA,UAAIL,QAAQ,KAAKY,SAAjB,EAA4B,KAAKT,QAAL,CAAc6C,gBAAd,CAA+BhD,QAA/B;AAC5B;AACD;;SAEDyC,QAAA,eAAMC,IAAN,EAAY;AACX,KACC9C,UAAU,CAACmD,QAAX,CAAoB,OAAOL,IAA3B,CADD,IAAAX,SAAS,2EAEyDW,IAFzD,CAAT,CAAA;AAKA,WAAO,KAAKO,MAAL,CAAYP,IAAZ,CAAP;AACA;;SAEDQ,QAAA,iBAAQ;AACP,WAAO,KAAKD,MAAL,EAAP;AACA;;SAEDA,SAAA,gBAAOP,IAAP,EAAa;AACZ,WAAO,KAAKS,iBAAL,CAAuBT,IAAvB,EAA6B,KAAKpC,QAAlC,CAAP;AACA;;SAED6C,oBAAA,2BAAkBT,IAAlB,EAAwBzC,OAAxB,EAAiC;AAChC,SAAK4C,mBAAL,CAAyBlD,YAAzB;;AAEA,QAAM8C,KAAK,GAAG,IAAI5C,QAAJ,CAAa,KAAKM,QAAlB,EAA4B,KAAKC,IAAjC,EAAuC,KAAKC,SAA5C,EAAuDJ,OAAvD,EAAgE,IAAhE,CAAd;AAEA,QAAMmD,MAAM,GAAG,KAAK5C,OAApB;;AACA,QAAI4C,MAAM,KAAK9D,MAAf,EAAuB;AACtB,WAAKqD,aAAL,CAAmBF,KAAnB,EAA0BC,IAA1B;AACA,KAFD,MAEO,IAAIU,MAAM,KAAK7D,OAAf,EAAwB;AAC9BkD,MAAAA,KAAK,CAACH,SAAN,CAAgB,KAAKZ,MAArB;AACA;;AAED,SAAKb,SAAL,CAAewC,IAAf,CAAoB;AAACZ,MAAAA,KAAK,EAALA,KAAD;AAAQC,MAAAA,IAAI,EAAJA;AAAR,KAApB;;AACA,SAAK5B,sBAAL;AACA,WAAO2B,KAAP;AACA;;SAEDK,oBAAA,6BAAoB;AACnB,SAAKhC,sBAAL;AACA,QAAI,KAAKA,sBAAL,KAAgC,CAApC,EAAuC,KAAKM,OAAL;AACvC;;SAEDyB,sBAAA,6BAAoBS,aAApB,EAAmC;AAClC,QAAMC,UAAU,GAAG,KAAK9C,WAAxB;;AACA,QAAI8C,UAAU,KAAK9D,WAAnB,EAAgC;AAC/B,WAAKgB,WAAL,GAAmB6C,aAAnB;AACA,KAFD,MAEO,IAAIC,UAAU,KAAKD,aAAnB,EAAkC;AACxC,QAAAvB,SAAS,QAAQ,gEAAR,CAAT,CAAA;AACA;AACD;;SAEDR,WAAA,kBAASiC,UAAT,EAAqB;AACpB,QAAMvD,OAAO,GAAG,KAAKK,QAArB;AACA,QAAIL,OAAJ,EAAaA,OAAO,CAACwD,QAAR,CAAiB,IAAjB,EAAuBD,UAAvB;AACb;;;;wBAEe;AACf,aAAO,CAACpE,QAAD,EAAWC,OAAX,EAAoBG,OAApB,EAA6BuD,QAA7B,CAAsC,KAAKvC,OAA3C,CAAP;AACA;;;wBAEc;AACd,aAAO,KAAKA,OAAL,KAAiBlB,MAAxB;AACA;;;wBAEe;AACf,aAAO,KAAKkB,OAAL,KAAiBjB,OAAxB;AACA;;;;;AAGFM,QAAQ,CAAC6D,SAAT,CAAmBC,WAAnB,IAAkC,IAAlC;;AC1OA;;;;;AAgBA,IAAMC,OAAO,GAAG,OAAOC,MAAP,KAAkB,WAAlC;;IAIMC;AACL,2BAAYlC,OAAZ,EAAqBmC,OAArB,EAA8B;AAC7B,SAAKlC,QAAL,GAAgBD,OAAhB,CAD6B;;AAI7B,QAAIoC,EAAJ,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,QAA1B;;AACA,QAAIJ,OAAO,IAAI,IAAf,EAAqB;AACpBK,MAAAA,eAAe,CAACL,OAAD,CAAf;AAEEC,MAAAA,EAHkB,GAGMD,OAHN,CAGlBC,EAHkB;AAGdC,MAAAA,SAHc,GAGMF,OAHN,CAGdE,SAHc;AAGHC,MAAAA,KAHG,GAGMH,OAHN,CAGHG,KAHG;;AAKpB;AACA,UAAIF,EAAE,IAAI,IAAV,EAAgB;AACfA,QAAAA,EAAE,GAAGpD,SAAL;AACA,OAFD,MAEO;AACN,SACCyD,YAAY,CAACL,EAAD,CADb,IAAAjC,SAAS,qEAEmDiC,EAFnD,CAAT,CAAA,UADM;;AAON,YAAIC,SAAS,IAAI,IAAjB,EAAuB;AACtBA,UAAAA,SAAS,GAAG,IAAZ;AACA,SAFD,MAEO;AACN,YACCA,SAAS,KAAK,KADf,KAAAlC,SAAS,QAER,0DAFQ,CAAT,CAAA;AAIA,SAdK;;;AAiBNoC,QAAAA,QAAQ,GAAGG,sBAAsB,CAACP,OAAD,CAAjC;AACA,OA1BmB;;;AA6BpB,UAAIE,SAAS,IAAI,IAAb,IAAqBA,SAAS,KAAK,KAAvC,EAA8C;AAC7CA,QAAAA,SAAS,GAAGrD,SAAZ;AACA,OAFD,MAEO,IAAIqD,SAAS,KAAK,IAAlB,EAAwB;AAC9BA,QAAAA,SAAS,GAAGM,IAAI,CAACC,SAAjB;AACA,OAFM,MAEA;AACN,SACCvC,UAAU,CAACgC,SAAD,CADX,IAAAlC,SAAS,+EAE6DkC,SAF7D,CAAT,CAAA;AAIAA,QAAAA,SAAS,GAAGQ,cAAc,CAACR,SAAD,CAA1B;AACA;;AAED,QACC,CAACL,OAAD,IAAY,CAACK,SAAb,IAA0BD,EAD3B,KAAAjC,SAAS,QAER,+DAFQ,CAAT,CAAA,UAzCoB;;AA+CpB,UAAImC,KAAK,IAAI,IAAb,EAAmB;AAClBA,QAAAA,KAAK,GAAG,KAAR;AACA,OAFD,MAEO;AACN,SACCQ,SAAS,CAACR,KAAD,CADV,IAAAnC,SAAS,+DAE6CmC,KAF7C,CAAT,CAAA,UADM;;AAON,YAAI,CAACN,OAAL,EAAcM,KAAK,GAAG,KAAR;AACd;AACD,KA1DD,MA0DO;AACNA,MAAAA,KAAK,GAAG,KAAR;AACA;;AAED,SAAKS,GAAL,GAAWX,EAAX;AACA,SAAKY,UAAL,GAAkBX,SAAlB;AACA,SAAKzC,MAAL,GAAc0C,KAAd;AACA,SAAKW,SAAL,GAAiBV,QAAjB,CAtE6B;AAyE7B;AACA;AACA;;AACA,QAAIP,OAAJ,EAAa;AACZ,WAAKkB,MAAL,GAAclE,SAAd;AACA,WAAKmE,YAAL,GAAoB,CAAC,CAACd,SAAtB;AACA,KAHD,MAGO;AACN,WAAKa,MAAL,GAAcb,SAAS,GAAG,EAAH,GAAQrD,SAA/B;AACA,WAAKmE,YAAL,GAAoB,KAApB;AACA;AACD;;;;SAEDC,SAAA,gBAAOjF,GAAP,EAAY;AACX,KAAU,CAAC,KAAKgF,YAAhB,IAAAhD,SAAS,QAAqB,8DAArB,CAAT,CAAA;AACA,WAAO,KAAKkD,OAAL,CAAalF,GAAb,CAAP;AACA;;SAEDkF,UAAA,iBAAQlF,GAAR,EAAaE,OAAb,EAAsB;AACrB,QAAMiF,QAAQ,GAAG,KAAKC,YAAL,CAAkBpF,GAAlB,EAAuBa,SAAvB,EAAkCX,OAAlC,CAAjB,CADqB;AAIrB;;;AACA,QAAI,CAAC,KAAKuB,MAAV,EAAkB0D,QAAQ,CAACvD,KAAT;AAElB,WAAOuD,QAAP;AACA;;SAEDE,MAAA,aAAIrF,GAAJ,EAAS;AACR;AACA,QAAI6D,OAAJ,EAAa;AACZ,UAAM3D,OAAO,GAAGoF,UAAU,CAACC,aAAD,CAA1B;AACA,QACCrF,OAAO,IAAI,CAAC,KAAK8E,YADlB,KAAAhD,SAAS,QAER,2FAFQ,CAAT,CAAA;AAIA,aAAO,KAAKkD,OAAL,CAAalF,GAAb,EAAkBE,OAAlB,CAAP;AACA,KATO;;;AAYR,QAAMsF,WAAW,GAAGC,MAAM,EAA1B;AAEA,QAAIN,QAAQ,GAAGK,WAAW,CAACE,OAA3B;;AACA,QAAI,CAACP,QAAD,IAAanF,GAAG,KAAKmF,QAAQ,CAAC9E,IAAlC,EAAwC;AACvC;AACA8E,MAAAA,QAAQ,GAAG,KAAKC,YAAL,CAAkBpF,GAAlB,EAAuBmF,QAAvB,CAAX;AACAK,MAAAA,WAAW,CAACE,OAAZ,GAAsBP,QAAtB;AACA,KAnBO;;;AAsBRQ,IAAAA,SAAS,CAAC,YAAM;AACfR,MAAAA,QAAQ,CAACvD,KAAT,GADe;;;AAIf,aAAO;AAAA,eAAMuD,QAAQ,CAAC9D,OAAT,EAAN;AAAA,OAAP;AACA,KALQ,EAKN,CAAC8D,QAAD,CALM,CAAT,CAtBQ;;AA8BR,WAAOA,QAAP;AACA;;SAEDC,eAAA,sBAAapF,GAAb,EAAkB4F,gBAAlB,EAAoC1F,OAApC,EAA6C;AAC5C;AACA,QAAMgE,SAAS,GAAG,KAAKW,UAAvB;AACA,QAAI,CAACX,SAAL,EAAgB,OAAO,IAAIpE,QAAJ,CAAa,IAAb,EAAmBE,GAAnB,EAAwBa,SAAxB,EAAmCX,OAAnC,CAAP,CAH4B;;AAM5C,QAAMD,QAAQ,GAAGiE,SAAS,CAAClE,GAAD,CAA1B,CAN4C;;AAS5C,QAAI4F,gBAAgB,IAAIA,gBAAgB,CAACtF,SAAjB,KAA+BL,QAAvD,EAAiE,OAAO2F,gBAAP,CATrB;AAY5C;;AACA,QAAMC,KAAK,GAAG3F,OAAO,GAAGA,OAAO,CAAC4F,QAAR,CAAiB,IAAjB,CAAH,GAA4B,KAAKf,MAAtD;AACA,QAAIgB,cAAc,GAAGF,KAAK,CAAC5F,QAAD,CAA1B,CAd4C;;AAiB5C,QAAI,CAAC8F,cAAL,EAAqB;AACpB;AACAA,MAAAA,cAAc,GAAG,IAAIjG,QAAJ,CAAa,IAAb,EAAmBE,GAAnB,EAAwBC,QAAxB,CAAjB,CAFoB;;AAKpB,WAAK+F,wBAAL,CAA8BD,cAA9B,EAA8C9F,QAA9C,EALoB;;;AAQpB4F,MAAAA,KAAK,CAAC5F,QAAD,CAAL,GAAkB8F,cAAlB;AACA,KA1B2C;;;AA6B5C,WAAOA,cAAc,CAAC3C,iBAAf,CAAiCvC,SAAjC,EAA4CX,OAA5C,CAAP;AACA;;SAED+C,mBAAA,0BAAiBhD,QAAjB,EAA2B;AAC1B,QAAI,KAAK8E,MAAT,EAAiB,OAAO,KAAKA,MAAL,CAAY9E,QAAZ,CAAP;AACjB;AAED;;;;;;;;;;;;;;SAYA+F,2BAAA,kCAAyBb,QAAzB,EAAmClF,QAAnC,EAA6C;AAC5C;AACA,QAAI4D,OAAJ,EAAa,OAF+B;;AAK5C,QAAMI,EAAE,GAAG,KAAKW,GAAhB;AACA,QAAI,CAACX,EAAL,EAAS,OANmC;;AAS5C,QAAMgC,oBAAoB,GAAGnC,MAAM,CAAC,KAAKgB,SAAN,CAAnC;AACA,QAAI,CAACmB,oBAAL,EAA2B;AAC3B,QAAMC,WAAW,GAAGD,oBAAoB,CAACE,IAAzC;AACA,QAAI,CAACD,WAAL,EAAkB,OAZ0B;;AAe5C,QAAME,WAAW,GAAGF,WAAW,CAACjC,EAAD,CAA/B;AACA,QAAI,CAACmC,WAAL,EAAkB,OAhB0B;AAmB5C;;AACA,QAAI,CAACA,WAAW,CAACC,cAAZ,CAA2BpG,QAA3B,CAAL,EAA2C,OApBC;;AAqB5C,QAAMuC,KAAK,GAAG4D,WAAW,CAACnG,QAAD,CAAzB,CArB4C;;AAwB5C,WAAOmG,WAAW,CAACnG,QAAD,CAAlB;AACA,QAAIqG,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,MAAzB,KAAoC,CAAxC,EAA2C,OAAON,WAAW,CAACjC,EAAD,CAAlB,CAzBC;;AA4B5CkB,IAAAA,QAAQ,CAAC1C,aAAT,CAAuBD,KAAvB;AACA;;;;;AAGa,SAASiE,qBAAT,CAA+B5E,OAA/B,EAAwCmC,OAAxC,EAAiD;AAC/D,SAAO,IAAID,eAAJ,CAAoBlC,OAApB,EAA6BmC,OAA7B,CAAP;AACA;AAED;;;;AAGA,SAASU,cAAT,CAAwBR,SAAxB,EAAmC;AAClC,SAAO,UAAClE,GAAD,EAAS;AACf,QAAMC,QAAQ,GAAGiE,SAAS,CAAClE,GAAD,CAA1B;AACA,KAAU0G,QAAQ,CAACzG,QAAD,CAAlB,IAAA+B,SAAS,oDAA+D/B,QAA/D,CAAT,CAAA;AACA,WAAOA,QAAP;AACA,GAJD;AAKA;;ACvPD;;;;;AAae,SAAS0G,UAAT,CAAoBnE,KAApB,EAA2B;AACzC,SAAOA,KAAK,IAAI,IAAT,IAAiB,CAAC,CAACA,KAAK,CAACoB,WAAD,CAAxB,IAAyC1B,UAAU,CAACM,KAAK,CAACK,IAAP,CAA1D;AACA;;ACCc,SAAS+D,aAAT,CAAuBC,SAAvB,EAAkC;AAChD,GACC3E,UAAU,CAAC2E,SAAD,CADX,IAAA7E,SAAS,oEAEkD6E,SAFlD,CAAT,CAAA;AAKA,MAAMC,sBAAsB,GAAGC,gBAAgB,CAACF,SAAD,CAAhB,GAC5BG,kBAAkB,CAACH,SAAD,CADU,GAE5BI,qBAAqB,CAACJ,SAAD,CAFxB;AAIAP,EAAAA,MAAM,CAACY,MAAP,CAAcJ,sBAAd,EAAsCD,SAAtC;AACAC,EAAAA,sBAAsB,CAACK,WAAvB,uBAAsDN,SAAS,CAACM,WAAV,IAAyBN,SAAS,CAACO,IAAnC,IAA2C,EAAjG;AACA,SAAON,sBAAP;AACA;;AAED,SAASG,qBAAT,CAA+BJ,SAA/B,EAA0C;AACzC,SAAO,UAASQ,KAAT,EAA8B;AACpCA,IAAAA,KAAK,GAAGC,YAAY,CAACD,KAAD,CAApB;;AADoC,sCAAXE,SAAW;AAAXA,MAAAA,SAAW;AAAA;;AAEpC,WAAOV,SAAS,CAACW,IAAV,OAAAX,SAAS,GAAM,IAAN,EAAYQ,KAAZ,SAAsBE,SAAtB,EAAhB,CAFoC;AAGpC,GAHD;AAIA;;AAED,SAASP,kBAAT,CAA4BH,SAA5B,EAAuC;AACtC,SAAO,UAACQ,KAAD,EAAW;AACjBA,IAAAA,KAAK,GAAGC,YAAY,CAACD,KAAD,CAApB;AACA,WAAOI,aAAa,CAACZ,SAAD,EAAYQ,KAAZ,CAApB;AACA,GAHD;AAIA;;AAED,SAASC,YAAT,CAAsBD,KAAtB,EAA6B;AAC5BA,EAAAA,KAAK,gBAAOA,KAAP,CAAL;;AAEA,OAAK,IAAMK,GAAX,IAAkBL,KAAlB,EAAyB;AACxB,QAAM7E,KAAK,GAAG6E,KAAK,CAACK,GAAD,CAAnB;AACA,QAAIf,UAAU,CAACnE,KAAD,CAAd,EAAuB6E,KAAK,CAACK,GAAD,CAAL,GAAalF,KAAK,CAACK,IAAN,EAAb;AACvB;;AAED,SAAOwE,KAAP;AACA;;ACtDD;;;;;AAUe,SAASM,WAAT,CAAqB3D,OAArB,EAA8B;AAC5C,SAAO,IAAI/C,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC/B;AACA;AACA,QAAMkD,QAAQ,GAAGwD,kCAAkC,CAAC5D,OAAD,CAAnD;AAEA,QAAI6D,cAAc,GAAG/D,MAAM,CAACM,QAAD,CAA3B,CAL+B;;AAQ/B,QAAIyD,cAAJ,EAAoB;AACnB3G,MAAAA,OAAO,CAAC2G,cAAc,CAAC1B,IAAhB,CAAP;AACA;AACA,KAX8B;AAc/B;;;AACA0B,IAAAA,cAAc,GAAGvB,MAAM,CAACrB,MAAP,CAAc,IAAd,EAAoB;AACpCkB,MAAAA,IAAI,EAAE;AACL2B,QAAAA,YAAY,EAAE,IADT;AAELC,QAAAA,GAFK,eAED5B,IAFC,EAEK;AACTG,UAAAA,MAAM,CAAC0B,cAAP,CAAsBH,cAAtB,EAAsC,MAAtC,EAA8C;AAACrF,YAAAA,KAAK,EAAE2D;AAAR,WAA9C;AACAjF,UAAAA,OAAO,CAACiF,IAAD,CAAP;AACA;AALI;AAD8B,KAApB,CAAjB;AAUArC,IAAAA,MAAM,CAACM,QAAD,CAAN,GAAmByD,cAAnB;AACA,GA1BM,CAAP;AA2BA;;;;"}