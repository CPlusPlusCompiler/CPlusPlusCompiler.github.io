{"version":3,"file":"shared.min.js","sources":["../../src/shared/serverContext.js","../../src/shared/shared.js"],"sourcesContent":["/* --------------------\n * react-lazy-data module\n * Server context\n * ------------------*/\n\n// Modules\nimport {createContext} from 'react';\n\n// Exports\n\nexport default createContext();\n","/* --------------------\n * react-lazy-data module\n * Shared functions\n * ------------------*/\n\n// Modules\nimport {isObject, isFullString} from 'is-it-type';\nimport invariant from 'tiny-invariant';\n\n// Imports\nimport {DEFAULT_CACHE_VAR} from './constants.js';\n\n// Constants\nconst EMPTY_OBJECT = {};\n\n// Exports\n\nexport function getCacheVarFromOptionsWithValidate(options, defaultValue) {\n\tif (options == null) {\n\t\toptions = EMPTY_OBJECT;\n\t} else {\n\t\tvalidateOptions(options);\n\t}\n\n\treturn getCacheVarFromOptions(options, defaultValue);\n}\n\nexport function validateOptions(options) {\n\tinvariant(isObject(options), `options must be an object if provided - got ${options}`);\n}\n\nexport function getCacheVarFromOptions(options, defaultValue) {\n\tconst {cacheVar} = options;\n\tif (cacheVar == null) return defaultValue || DEFAULT_CACHE_VAR;\n\n\tinvariant(\n\t\tisFullString(cacheVar),\n\t\t`options.cacheVar must be a non-empty string if provided - got ${cacheVar}`\n\t);\n\n\treturn cacheVar;\n}\n"],"names":["createContext","EMPTY_OBJECT","getCacheVarFromOptionsWithValidate","options","defaultValue","validateOptions","getCacheVarFromOptions","isObject","invariant","cacheVar","DEFAULT_CACHE_VAR","isFullString"],"mappings":"mKAUA,MAAeA,ICGTC,EAAe,GAId,SAASC,EAAmCC,EAASC,UAC5C,MAAXD,EACHA,EAAUF,EAEVI,EAAgBF,GAGVG,EAAuBH,EAASC,GAGjC,SAASC,EAAgBF,GACrBI,EAASJ,IAAnBK,MAGM,SAASF,EAAuBH,EAASC,OACxCK,EAAYN,EAAZM,gBACS,MAAZA,EAAyBL,GAAgBM,GAG5CC,EAAaF,IADdD,MAKOC"}